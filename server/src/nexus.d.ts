/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */


import type { IContext } from "./graphql/context.interface"
import type { core, connectionPluginCore } from "nexus"
import type { FieldAuthorizeResolver } from "nexus/dist/plugins/fieldAuthorizePlugin"
declare global {
  interface NexusGenCustomInputMethods<TypeName extends string> {
    /**
     * Date custom scalar type
     */
    date<FieldName extends string>(fieldName: FieldName, opts?: core.CommonInputFieldConfig<TypeName, FieldName>): void // "Date";
    hashId<FieldName extends string>(fieldName: FieldName, opts?: core.CommonInputFieldConfig<TypeName, FieldName>): void // "HashId";
  }
}
declare global {
  interface NexusGenCustomOutputMethods<TypeName extends string> {
    /**
     * Date custom scalar type
     */
    date<FieldName extends string>(fieldName: FieldName, ...opts: core.ScalarOutSpread<TypeName, FieldName>): void // "Date";
    hashId<FieldName extends string>(fieldName: FieldName, ...opts: core.ScalarOutSpread<TypeName, FieldName>): void // "HashId";
    /**
     * Adds a Relay-style connection to the type, with numerous options for configuration
     *
     * @see https://nexusjs.org/docs/plugins/connection
     */
    connectionField<FieldName extends string>(
      fieldName: FieldName,
      config: connectionPluginCore.ConnectionFieldConfig<TypeName, FieldName>
    ): void
  }
}


declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  CreateGroupChatInput: { // input type
    description?: string | null; // String
    memberIds?: NexusGenScalars['HashId'][] | null; // [HashId!]
    name: string; // String!
  }
  UserOrderBy: { // input type
    createdAt?: NexusGenEnums['Sort'] | null; // Sort
    email?: NexusGenEnums['Sort'] | null; // Sort
    id?: NexusGenEnums['Sort'] | null; // Sort
    name?: NexusGenEnums['Sort'] | null; // Sort
    updatedAt?: NexusGenEnums['Sort'] | null; // Sort
    username?: NexusGenEnums['Sort'] | null; // Sort
  }
}

export interface NexusGenEnums {
  RequestStatus: "CANCELLED" | "SENT"
  ResponseStatus: "ACCEPTED" | "DECLINED" | "SEEN"
  Sort: "asc" | "desc"
  StrangerStatus: "NO_REQUEST" | "REQUEST_RECEIVED" | "REQUEST_SENT"
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
  Date: any
  HashId: any
}

export interface NexusGenObjects {
  AdminsAdded: { // root type
    chatId: NexusGenScalars['HashId']; // HashId!
    createdAt: NexusGenScalars['Date']; // Date!
    createdById: NexusGenScalars['HashId']; // HashId!
    id: NexusGenScalars['HashId']; // HashId!
    updatedAt: NexusGenScalars['Date']; // Date!
  }
  AdminsRemoved: { // root type
    chatId: NexusGenScalars['HashId']; // HashId!
    createdAt: NexusGenScalars['Date']; // Date!
    createdById: NexusGenScalars['HashId']; // HashId!
    id: NexusGenScalars['HashId']; // HashId!
    updatedAt: NexusGenScalars['Date']; // Date!
  }
  ChatCreatedAlert: { // root type
    createdAt: NexusGenScalars['Date']; // Date!
    createdById: NexusGenScalars['HashId']; // HashId!
    id: NexusGenScalars['HashId']; // HashId!
  }
  ChatDeletedAlert: { // root type
    createdAt: NexusGenScalars['Date']; // Date!
    createdById: NexusGenScalars['HashId']; // HashId!
    id: NexusGenScalars['HashId']; // HashId!
  }
  DeletedChat: { // root type
    createdAt?: NexusGenScalars['Date'] | null; // Date
    createdById: NexusGenScalars['HashId']; // HashId!
    deletedAt: NexusGenScalars['Date']; // Date!
    id: NexusGenScalars['HashId']; // HashId!
    updatedAt?: NexusGenScalars['Date'] | null; // Date
  }
  DeletedEvent: { // root type
    chatId: NexusGenScalars['HashId']; // HashId!
    createdAt: NexusGenScalars['Date']; // Date!
    createdById: NexusGenScalars['HashId']; // HashId!
    deletedAt: NexusGenScalars['Date']; // Date!
    id: NexusGenScalars['HashId']; // HashId!
    updatedAt: NexusGenScalars['Date']; // Date!
  }
  DescriptionUpdated: { // root type
    chatId: NexusGenScalars['HashId']; // HashId!
    createdAt: NexusGenScalars['Date']; // Date!
    createdById: NexusGenScalars['HashId']; // HashId!
    id: NexusGenScalars['HashId']; // HashId!
    updatedAt: NexusGenScalars['Date']; // Date!
  }
  DirectMessageChat: { // root type
    createdAt?: NexusGenScalars['Date'] | null; // Date
    createdById: NexusGenScalars['HashId']; // HashId!
    id: NexusGenScalars['HashId']; // HashId!
    updatedAt?: NexusGenScalars['Date'] | null; // Date
  }
  EventConnection: { // root type
    edges?: Array<NexusGenRootTypes['EventEdge'] | null> | null; // [EventEdge]
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
  }
  EventEdge: { // root type
    cursor: string; // String!
    node?: NexusGenRootTypes['Event'] | null; // Event
  }
  Friend: { // root type
    createdAt: NexusGenScalars['Date']; // Date!
    id: NexusGenScalars['HashId']; // HashId!
    name?: string | null; // String
    updatedAt: NexusGenScalars['Date']; // Date!
    username: string; // String!
  }
  FriendConnection: { // root type
    edges?: Array<NexusGenRootTypes['FriendEdge'] | null> | null; // [FriendEdge]
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
  }
  FriendCreatedAlert: { // root type
    createdAt: NexusGenScalars['Date']; // Date!
    createdById: NexusGenScalars['HashId']; // HashId!
    id: NexusGenScalars['HashId']; // HashId!
  }
  FriendDeletedAlert: { // root type
    createdAt: NexusGenScalars['Date']; // Date!
    createdById: NexusGenScalars['HashId']; // HashId!
    id: NexusGenScalars['HashId']; // HashId!
  }
  FriendEdge: { // root type
    cursor: string; // String!
    node?: NexusGenRootTypes['Friend'] | null; // Friend
  }
  FriendRequest: { // root type
    createdAt: NexusGenScalars['Date']; // Date!
    createdById: NexusGenScalars['HashId']; // HashId!
    id: NexusGenScalars['HashId']; // HashId!
    recipientId: NexusGenScalars['HashId']; // HashId!
    status: NexusGenEnums['RequestStatus']; // RequestStatus!
  }
  GroupChat: { // root type
    createdAt?: NexusGenScalars['Date'] | null; // Date
    createdById: NexusGenScalars['HashId']; // HashId!
    description?: string | null; // String
    id: NexusGenScalars['HashId']; // HashId!
    name: string; // String!
    updatedAt?: NexusGenScalars['Date'] | null; // Date
  }
  Me: { // root type
    createdAt: NexusGenScalars['Date']; // Date!
    id: NexusGenScalars['HashId']; // HashId!
    name?: string | null; // String
    updatedAt: NexusGenScalars['Date']; // Date!
    username: string; // String!
  }
  MembersAdded: { // root type
    chatId: NexusGenScalars['HashId']; // HashId!
    createdAt: NexusGenScalars['Date']; // Date!
    createdById: NexusGenScalars['HashId']; // HashId!
    id: NexusGenScalars['HashId']; // HashId!
    updatedAt: NexusGenScalars['Date']; // Date!
  }
  MembersRemoved: { // root type
    chatId: NexusGenScalars['HashId']; // HashId!
    createdAt: NexusGenScalars['Date']; // Date!
    createdById: NexusGenScalars['HashId']; // HashId!
    id: NexusGenScalars['HashId']; // HashId!
    updatedAt: NexusGenScalars['Date']; // Date!
  }
  Message: { // root type
    chatId: NexusGenScalars['HashId']; // HashId!
    createdAt: NexusGenScalars['Date']; // Date!
    createdById: NexusGenScalars['HashId']; // HashId!
    id: NexusGenScalars['HashId']; // HashId!
    updatedAt: NexusGenScalars['Date']; // Date!
  }
  Mutation: {};
  NameUpdated: { // root type
    chatId: NexusGenScalars['HashId']; // HashId!
    createdAt: NexusGenScalars['Date']; // Date!
    createdById: NexusGenScalars['HashId']; // HashId!
    id: NexusGenScalars['HashId']; // HashId!
    updatedAt: NexusGenScalars['Date']; // Date!
  }
  PageInfo: { // root type
    endCursor?: string | null; // String
    hasNextPage: boolean; // Boolean!
    hasPreviousPage: boolean; // Boolean!
    startCursor?: string | null; // String
  }
  Query: {};
  Response: { // root type
    status: NexusGenEnums['ResponseStatus']; // ResponseStatus!
  }
  Stranger: { // root type
    createdAt: NexusGenScalars['Date']; // Date!
    id: NexusGenScalars['HashId']; // HashId!
    name?: string | null; // String
    updatedAt: NexusGenScalars['Date']; // Date!
    username: string; // String!
  }
  Subscription: {};
  UserConnection: { // root type
    edges?: Array<NexusGenRootTypes['UserEdge'] | null> | null; // [UserEdge]
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
  }
  UserEdge: { // root type
    cursor: string; // String!
    node?: NexusGenRootTypes['User'] | null; // User
  }
}

export interface NexusGenInterfaces {
  Alert: NexusGenRootTypes['ChatCreatedAlert'] | NexusGenRootTypes['ChatDeletedAlert'] | NexusGenRootTypes['FriendCreatedAlert'] | NexusGenRootTypes['FriendDeletedAlert'];
  Chat: NexusGenRootTypes['DeletedChat'] | NexusGenRootTypes['DirectMessageChat'] | NexusGenRootTypes['GroupChat'];
  ChatUpdate: NexusGenRootTypes['AdminsAdded'] | NexusGenRootTypes['AdminsRemoved'] | NexusGenRootTypes['DescriptionUpdated'] | NexusGenRootTypes['MembersAdded'] | NexusGenRootTypes['MembersRemoved'] | NexusGenRootTypes['NameUpdated'];
  Event: NexusGenRootTypes['AdminsAdded'] | NexusGenRootTypes['AdminsRemoved'] | NexusGenRootTypes['DeletedEvent'] | NexusGenRootTypes['DescriptionUpdated'] | NexusGenRootTypes['MembersAdded'] | NexusGenRootTypes['MembersRemoved'] | NexusGenRootTypes['Message'] | NexusGenRootTypes['NameUpdated'];
  KnownUser: NexusGenRootTypes['Friend'] | NexusGenRootTypes['Me'];
  Notification: NexusGenRootTypes['ChatCreatedAlert'] | NexusGenRootTypes['ChatDeletedAlert'] | NexusGenRootTypes['FriendCreatedAlert'] | NexusGenRootTypes['FriendDeletedAlert'] | NexusGenRootTypes['FriendRequest'];
  Request: NexusGenRootTypes['FriendRequest'];
  User: NexusGenRootTypes['Friend'] | NexusGenRootTypes['Me'] | NexusGenRootTypes['Stranger'];
}

export interface NexusGenUnions {
  ChatSubscriptionResult: NexusGenRootTypes['AdminsAdded'] | NexusGenRootTypes['AdminsRemoved'] | NexusGenRootTypes['DescriptionUpdated'] | NexusGenRootTypes['DirectMessageChat'] | NexusGenRootTypes['GroupChat'] | NexusGenRootTypes['MembersAdded'] | NexusGenRootTypes['MembersRemoved'] | NexusGenRootTypes['NameUpdated'];
}

export type NexusGenRootTypes = NexusGenInterfaces & NexusGenObjects & NexusGenUnions

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars & NexusGenEnums

export interface NexusGenFieldTypes {
  AdminsAdded: { // field return type
    adminsAdded: NexusGenRootTypes['User'][]; // [User!]!
    chat: NexusGenRootTypes['Chat']; // Chat!
    chatId: NexusGenScalars['HashId']; // HashId!
    createdAt: NexusGenScalars['Date']; // Date!
    createdBy: NexusGenRootTypes['User']; // User!
    createdById: NexusGenScalars['HashId']; // HashId!
    id: NexusGenScalars['HashId']; // HashId!
    isCreator: boolean; // Boolean!
    updatedAt: NexusGenScalars['Date']; // Date!
  }
  AdminsRemoved: { // field return type
    adminsRemoved: NexusGenRootTypes['User'][]; // [User!]!
    chat: NexusGenRootTypes['Chat']; // Chat!
    chatId: NexusGenScalars['HashId']; // HashId!
    createdAt: NexusGenScalars['Date']; // Date!
    createdBy: NexusGenRootTypes['User']; // User!
    createdById: NexusGenScalars['HashId']; // HashId!
    id: NexusGenScalars['HashId']; // HashId!
    isCreator: boolean; // Boolean!
    updatedAt: NexusGenScalars['Date']; // Date!
  }
  ChatCreatedAlert: { // field return type
    chat: NexusGenRootTypes['Chat']; // Chat!
    createdAt: NexusGenScalars['Date']; // Date!
    createdBy: NexusGenRootTypes['User']; // User!
    createdById: NexusGenScalars['HashId']; // HashId!
    id: NexusGenScalars['HashId']; // HashId!
    isCreator: boolean; // Boolean!
    recipients: NexusGenRootTypes['User'][]; // [User!]!
  }
  ChatDeletedAlert: { // field return type
    chat: NexusGenRootTypes['Chat']; // Chat!
    createdAt: NexusGenScalars['Date']; // Date!
    createdBy: NexusGenRootTypes['User']; // User!
    createdById: NexusGenScalars['HashId']; // HashId!
    id: NexusGenScalars['HashId']; // HashId!
    isCreator: boolean; // Boolean!
    recipients: NexusGenRootTypes['User'][]; // [User!]!
  }
  DeletedChat: { // field return type
    createdAt: NexusGenScalars['Date'] | null; // Date
    createdBy: NexusGenRootTypes['User']; // User!
    createdById: NexusGenScalars['HashId']; // HashId!
    deletedAt: NexusGenScalars['Date']; // Date!
    id: NexusGenScalars['HashId']; // HashId!
    isCreator: boolean; // Boolean!
    updatedAt: NexusGenScalars['Date'] | null; // Date
  }
  DeletedEvent: { // field return type
    chat: NexusGenRootTypes['Chat']; // Chat!
    chatId: NexusGenScalars['HashId']; // HashId!
    createdAt: NexusGenScalars['Date']; // Date!
    createdBy: NexusGenRootTypes['User']; // User!
    createdById: NexusGenScalars['HashId']; // HashId!
    deletedAt: NexusGenScalars['Date']; // Date!
    id: NexusGenScalars['HashId']; // HashId!
    isCreator: boolean; // Boolean!
    updatedAt: NexusGenScalars['Date']; // Date!
  }
  DescriptionUpdated: { // field return type
    chat: NexusGenRootTypes['Chat']; // Chat!
    chatId: NexusGenScalars['HashId']; // HashId!
    createdAt: NexusGenScalars['Date']; // Date!
    createdBy: NexusGenRootTypes['User']; // User!
    createdById: NexusGenScalars['HashId']; // HashId!
    descriptionAfter: string; // String!
    descriptionBefore: string; // String!
    id: NexusGenScalars['HashId']; // HashId!
    isCreator: boolean; // Boolean!
    updatedAt: NexusGenScalars['Date']; // Date!
  }
  DirectMessageChat: { // field return type
    createdAt: NexusGenScalars['Date'] | null; // Date
    createdBy: NexusGenRootTypes['User']; // User!
    createdById: NexusGenScalars['HashId']; // HashId!
    events: NexusGenRootTypes['EventConnection']; // EventConnection!
    friend: NexusGenRootTypes['Friend']; // Friend!
    id: NexusGenScalars['HashId']; // HashId!
    isCreator: boolean; // Boolean!
    updatedAt: NexusGenScalars['Date'] | null; // Date
  }
  EventConnection: { // field return type
    edges: Array<NexusGenRootTypes['EventEdge'] | null> | null; // [EventEdge]
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
  }
  EventEdge: { // field return type
    cursor: string; // String!
    node: NexusGenRootTypes['Event'] | null; // Event
  }
  Friend: { // field return type
    chats: NexusGenRootTypes['Chat'][]; // [Chat!]!
    createdAt: NexusGenScalars['Date']; // Date!
    friends: NexusGenRootTypes['FriendConnection']; // FriendConnection!
    id: NexusGenScalars['HashId']; // HashId!
    name: string | null; // String
    updatedAt: NexusGenScalars['Date']; // Date!
    username: string; // String!
  }
  FriendConnection: { // field return type
    edges: Array<NexusGenRootTypes['FriendEdge'] | null> | null; // [FriendEdge]
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
  }
  FriendCreatedAlert: { // field return type
    createdAt: NexusGenScalars['Date']; // Date!
    createdBy: NexusGenRootTypes['User']; // User!
    createdById: NexusGenScalars['HashId']; // HashId!
    id: NexusGenScalars['HashId']; // HashId!
    isCreator: boolean; // Boolean!
    recipients: NexusGenRootTypes['User'][]; // [User!]!
    user: NexusGenRootTypes['Friend']; // Friend!
  }
  FriendDeletedAlert: { // field return type
    createdAt: NexusGenScalars['Date']; // Date!
    createdBy: NexusGenRootTypes['User']; // User!
    createdById: NexusGenScalars['HashId']; // HashId!
    id: NexusGenScalars['HashId']; // HashId!
    isCreator: boolean; // Boolean!
    recipients: NexusGenRootTypes['User'][]; // [User!]!
    user: NexusGenRootTypes['Stranger']; // Stranger!
  }
  FriendEdge: { // field return type
    cursor: string; // String!
    node: NexusGenRootTypes['Friend'] | null; // Friend
  }
  FriendRequest: { // field return type
    createdAt: NexusGenScalars['Date']; // Date!
    createdBy: NexusGenRootTypes['User']; // User!
    createdById: NexusGenScalars['HashId']; // HashId!
    id: NexusGenScalars['HashId']; // HashId!
    isCreator: boolean; // Boolean!
    recipient: NexusGenRootTypes['User']; // User!
    recipientId: NexusGenScalars['HashId']; // HashId!
    response: NexusGenRootTypes['Response'] | null; // Response
    status: NexusGenEnums['RequestStatus']; // RequestStatus!
  }
  GroupChat: { // field return type
    admins: NexusGenRootTypes['User'][]; // [User!]!
    createdAt: NexusGenScalars['Date'] | null; // Date
    createdBy: NexusGenRootTypes['User']; // User!
    createdById: NexusGenScalars['HashId']; // HashId!
    description: string | null; // String
    events: NexusGenRootTypes['EventConnection']; // EventConnection!
    id: NexusGenScalars['HashId']; // HashId!
    isAdmin: boolean; // Boolean!
    isCreator: boolean; // Boolean!
    memberCount: number; // Int!
    members: NexusGenRootTypes['User'][]; // [User!]!
    name: string; // String!
    updatedAt: NexusGenScalars['Date'] | null; // Date
  }
  Me: { // field return type
    chats: NexusGenRootTypes['Chat'][]; // [Chat!]!
    createdAt: NexusGenScalars['Date']; // Date!
    friends: NexusGenRootTypes['FriendConnection']; // FriendConnection!
    id: NexusGenScalars['HashId']; // HashId!
    name: string | null; // String
    requests: NexusGenRootTypes['Request'][]; // [Request!]!
    sentRequests: NexusGenRootTypes['Request'][]; // [Request!]!
    updatedAt: NexusGenScalars['Date']; // Date!
    username: string; // String!
  }
  MembersAdded: { // field return type
    chat: NexusGenRootTypes['Chat']; // Chat!
    chatId: NexusGenScalars['HashId']; // HashId!
    createdAt: NexusGenScalars['Date']; // Date!
    createdBy: NexusGenRootTypes['User']; // User!
    createdById: NexusGenScalars['HashId']; // HashId!
    id: NexusGenScalars['HashId']; // HashId!
    isCreator: boolean; // Boolean!
    membersAdded: NexusGenRootTypes['User'][]; // [User!]!
    updatedAt: NexusGenScalars['Date']; // Date!
  }
  MembersRemoved: { // field return type
    chat: NexusGenRootTypes['Chat']; // Chat!
    chatId: NexusGenScalars['HashId']; // HashId!
    createdAt: NexusGenScalars['Date']; // Date!
    createdBy: NexusGenRootTypes['User']; // User!
    createdById: NexusGenScalars['HashId']; // HashId!
    id: NexusGenScalars['HashId']; // HashId!
    isCreator: boolean; // Boolean!
    membersRemoved: NexusGenRootTypes['User'][]; // [User!]!
    updatedAt: NexusGenScalars['Date']; // Date!
  }
  Message: { // field return type
    chat: NexusGenRootTypes['Chat']; // Chat!
    chatId: NexusGenScalars['HashId']; // HashId!
    content: string; // String!
    createdAt: NexusGenScalars['Date']; // Date!
    createdBy: NexusGenRootTypes['User']; // User!
    createdById: NexusGenScalars['HashId']; // HashId!
    id: NexusGenScalars['HashId']; // HashId!
    isCreator: boolean; // Boolean!
    likedBy: NexusGenRootTypes['User'][]; // [User!]!
    updatedAt: NexusGenScalars['Date']; // Date!
  }
  Mutation: { // field return type
    acceptRequest: NexusGenRootTypes['Alert'] | null; // Alert
    addAdminsToGroupChat: NexusGenRootTypes['AdminsAdded'] | null; // AdminsAdded
    addMembersToGroupChat: NexusGenRootTypes['MembersAdded'] | null; // MembersAdded
    cancelRequest: NexusGenRootTypes['Request'] | null; // Request
    createDirectMessageChat: NexusGenRootTypes['DirectMessageChat'] | null; // DirectMessageChat
    createGroupChat: NexusGenRootTypes['GroupChat'] | null; // GroupChat
    createMessage: NexusGenRootTypes['Message'] | null; // Message
    declineRequest: NexusGenRootTypes['Alert'] | null; // Alert
    deleteChat: NexusGenRootTypes['DeletedChat'] | null; // DeletedChat
    deleteEvent: NexusGenRootTypes['DeletedEvent'] | null; // DeletedEvent
    deleteFriend: NexusGenRootTypes['Stranger'] | null; // Stranger
    removeAdminsFromGroupChat: NexusGenRootTypes['AdminsRemoved'] | null; // AdminsRemoved
    removeMembersFromGroupChat: NexusGenRootTypes['MembersRemoved'] | null; // MembersRemoved
    sendFriendRequest: NexusGenRootTypes['FriendRequest'] | null; // FriendRequest
    updateGroupChatDescription: NexusGenRootTypes['DescriptionUpdated'] | null; // DescriptionUpdated
    updateGroupChatName: NexusGenRootTypes['NameUpdated'] | null; // NameUpdated
    updateMessage: NexusGenRootTypes['Message'] | null; // Message
    updateUser: NexusGenRootTypes['Me'] | null; // Me
  }
  NameUpdated: { // field return type
    chat: NexusGenRootTypes['Chat']; // Chat!
    chatId: NexusGenScalars['HashId']; // HashId!
    createdAt: NexusGenScalars['Date']; // Date!
    createdBy: NexusGenRootTypes['User']; // User!
    createdById: NexusGenScalars['HashId']; // HashId!
    id: NexusGenScalars['HashId']; // HashId!
    isCreator: boolean; // Boolean!
    nameAfter: string; // String!
    nameBefore: string; // String!
    updatedAt: NexusGenScalars['Date']; // Date!
  }
  PageInfo: { // field return type
    endCursor: string | null; // String
    hasNextPage: boolean; // Boolean!
    hasPreviousPage: boolean; // Boolean!
    startCursor: string | null; // String
  }
  Query: { // field return type
    chat: NexusGenRootTypes['Chat'] | null; // Chat
    chats: NexusGenRootTypes['Chat'][]; // [Chat!]!
    events: NexusGenRootTypes['EventConnection']; // EventConnection!
    friends: NexusGenRootTypes['Friend'][]; // [Friend!]!
    me: NexusGenRootTypes['Me'] | null; // Me
    message: NexusGenRootTypes['Event'] | null; // Event
    notifications: NexusGenRootTypes['Notification'][]; // [Notification!]!
    requests: NexusGenRootTypes['Request'][]; // [Request!]!
    user: NexusGenRootTypes['User'] | null; // User
    users: NexusGenRootTypes['UserConnection']; // UserConnection!
  }
  Response: { // field return type
    status: NexusGenEnums['ResponseStatus']; // ResponseStatus!
  }
  Stranger: { // field return type
    createdAt: NexusGenScalars['Date']; // Date!
    friendRequest: NexusGenRootTypes['FriendRequest'] | null; // FriendRequest
    id: NexusGenScalars['HashId']; // HashId!
    mutualFriends: NexusGenRootTypes['FriendConnection']; // FriendConnection!
    name: string | null; // String
    status: NexusGenEnums['StrangerStatus']; // StrangerStatus!
    updatedAt: NexusGenScalars['Date']; // Date!
    username: string; // String!
  }
  Subscription: { // field return type
    chatCreated: NexusGenRootTypes['Chat'] | null; // Chat
    chatDeleted: NexusGenRootTypes['DeletedChat'] | null; // DeletedChat
    chatUpdated: NexusGenRootTypes['ChatUpdate'] | null; // ChatUpdate
    chats: NexusGenRootTypes['ChatSubscriptionResult'] | null; // ChatSubscriptionResult
    eventCreated: NexusGenRootTypes['Event'] | null; // Event
    eventDeleted: NexusGenRootTypes['DeletedEvent'] | null; // DeletedEvent
    eventUpdated: NexusGenRootTypes['Event'] | null; // Event
    events: NexusGenRootTypes['Event'] | null; // Event
    friends: NexusGenRootTypes['User'] | null; // User
    notifications: NexusGenRootTypes['Notification'] | null; // Notification
    requestAccepted: NexusGenRootTypes['Request'] | null; // Request
    requestCancelled: NexusGenRootTypes['Request'] | null; // Request
    requestDeclined: NexusGenRootTypes['Request'] | null; // Request
    requestSent: NexusGenRootTypes['Request'] | null; // Request
    requests: NexusGenRootTypes['Request'] | null; // Request
  }
  UserConnection: { // field return type
    edges: Array<NexusGenRootTypes['UserEdge'] | null> | null; // [UserEdge]
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
  }
  UserEdge: { // field return type
    cursor: string; // String!
    node: NexusGenRootTypes['User'] | null; // User
  }
  Alert: { // field return type
    createdAt: NexusGenScalars['Date']; // Date!
    createdBy: NexusGenRootTypes['User']; // User!
    createdById: NexusGenScalars['HashId']; // HashId!
    id: NexusGenScalars['HashId']; // HashId!
    isCreator: boolean; // Boolean!
    recipients: NexusGenRootTypes['User'][]; // [User!]!
  }
  Chat: { // field return type
    createdAt: NexusGenScalars['Date'] | null; // Date
    createdBy: NexusGenRootTypes['User']; // User!
    createdById: NexusGenScalars['HashId']; // HashId!
    id: NexusGenScalars['HashId']; // HashId!
    isCreator: boolean; // Boolean!
    updatedAt: NexusGenScalars['Date'] | null; // Date
  }
  ChatUpdate: { // field return type
    chat: NexusGenRootTypes['Chat']; // Chat!
    chatId: NexusGenScalars['HashId']; // HashId!
    createdAt: NexusGenScalars['Date']; // Date!
    createdBy: NexusGenRootTypes['User']; // User!
    createdById: NexusGenScalars['HashId']; // HashId!
    id: NexusGenScalars['HashId']; // HashId!
    isCreator: boolean; // Boolean!
    updatedAt: NexusGenScalars['Date']; // Date!
  }
  Event: { // field return type
    chat: NexusGenRootTypes['Chat']; // Chat!
    chatId: NexusGenScalars['HashId']; // HashId!
    createdAt: NexusGenScalars['Date']; // Date!
    createdBy: NexusGenRootTypes['User']; // User!
    createdById: NexusGenScalars['HashId']; // HashId!
    id: NexusGenScalars['HashId']; // HashId!
    isCreator: boolean; // Boolean!
    updatedAt: NexusGenScalars['Date']; // Date!
  }
  KnownUser: { // field return type
    chats: NexusGenRootTypes['Chat'][]; // [Chat!]!
    friends: NexusGenRootTypes['FriendConnection']; // FriendConnection!
  }
  Notification: { // field return type
    createdAt: NexusGenScalars['Date']; // Date!
    createdBy: NexusGenRootTypes['User']; // User!
    createdById: NexusGenScalars['HashId']; // HashId!
    id: NexusGenScalars['HashId']; // HashId!
    isCreator: boolean; // Boolean!
  }
  Request: { // field return type
    createdAt: NexusGenScalars['Date']; // Date!
    createdBy: NexusGenRootTypes['User']; // User!
    createdById: NexusGenScalars['HashId']; // HashId!
    id: NexusGenScalars['HashId']; // HashId!
    isCreator: boolean; // Boolean!
    recipient: NexusGenRootTypes['User']; // User!
    recipientId: NexusGenScalars['HashId']; // HashId!
    response: NexusGenRootTypes['Response'] | null; // Response
    status: NexusGenEnums['RequestStatus']; // RequestStatus!
  }
  User: { // field return type
    createdAt: NexusGenScalars['Date']; // Date!
    id: NexusGenScalars['HashId']; // HashId!
    name: string | null; // String
    updatedAt: NexusGenScalars['Date']; // Date!
    username: string; // String!
  }
}

export interface NexusGenFieldTypeNames {
  AdminsAdded: { // field return type name
    adminsAdded: 'User'
    chat: 'Chat'
    chatId: 'HashId'
    createdAt: 'Date'
    createdBy: 'User'
    createdById: 'HashId'
    id: 'HashId'
    isCreator: 'Boolean'
    updatedAt: 'Date'
  }
  AdminsRemoved: { // field return type name
    adminsRemoved: 'User'
    chat: 'Chat'
    chatId: 'HashId'
    createdAt: 'Date'
    createdBy: 'User'
    createdById: 'HashId'
    id: 'HashId'
    isCreator: 'Boolean'
    updatedAt: 'Date'
  }
  ChatCreatedAlert: { // field return type name
    chat: 'Chat'
    createdAt: 'Date'
    createdBy: 'User'
    createdById: 'HashId'
    id: 'HashId'
    isCreator: 'Boolean'
    recipients: 'User'
  }
  ChatDeletedAlert: { // field return type name
    chat: 'Chat'
    createdAt: 'Date'
    createdBy: 'User'
    createdById: 'HashId'
    id: 'HashId'
    isCreator: 'Boolean'
    recipients: 'User'
  }
  DeletedChat: { // field return type name
    createdAt: 'Date'
    createdBy: 'User'
    createdById: 'HashId'
    deletedAt: 'Date'
    id: 'HashId'
    isCreator: 'Boolean'
    updatedAt: 'Date'
  }
  DeletedEvent: { // field return type name
    chat: 'Chat'
    chatId: 'HashId'
    createdAt: 'Date'
    createdBy: 'User'
    createdById: 'HashId'
    deletedAt: 'Date'
    id: 'HashId'
    isCreator: 'Boolean'
    updatedAt: 'Date'
  }
  DescriptionUpdated: { // field return type name
    chat: 'Chat'
    chatId: 'HashId'
    createdAt: 'Date'
    createdBy: 'User'
    createdById: 'HashId'
    descriptionAfter: 'String'
    descriptionBefore: 'String'
    id: 'HashId'
    isCreator: 'Boolean'
    updatedAt: 'Date'
  }
  DirectMessageChat: { // field return type name
    createdAt: 'Date'
    createdBy: 'User'
    createdById: 'HashId'
    events: 'EventConnection'
    friend: 'Friend'
    id: 'HashId'
    isCreator: 'Boolean'
    updatedAt: 'Date'
  }
  EventConnection: { // field return type name
    edges: 'EventEdge'
    pageInfo: 'PageInfo'
  }
  EventEdge: { // field return type name
    cursor: 'String'
    node: 'Event'
  }
  Friend: { // field return type name
    chats: 'Chat'
    createdAt: 'Date'
    friends: 'FriendConnection'
    id: 'HashId'
    name: 'String'
    updatedAt: 'Date'
    username: 'String'
  }
  FriendConnection: { // field return type name
    edges: 'FriendEdge'
    pageInfo: 'PageInfo'
  }
  FriendCreatedAlert: { // field return type name
    createdAt: 'Date'
    createdBy: 'User'
    createdById: 'HashId'
    id: 'HashId'
    isCreator: 'Boolean'
    recipients: 'User'
    user: 'Friend'
  }
  FriendDeletedAlert: { // field return type name
    createdAt: 'Date'
    createdBy: 'User'
    createdById: 'HashId'
    id: 'HashId'
    isCreator: 'Boolean'
    recipients: 'User'
    user: 'Stranger'
  }
  FriendEdge: { // field return type name
    cursor: 'String'
    node: 'Friend'
  }
  FriendRequest: { // field return type name
    createdAt: 'Date'
    createdBy: 'User'
    createdById: 'HashId'
    id: 'HashId'
    isCreator: 'Boolean'
    recipient: 'User'
    recipientId: 'HashId'
    response: 'Response'
    status: 'RequestStatus'
  }
  GroupChat: { // field return type name
    admins: 'User'
    createdAt: 'Date'
    createdBy: 'User'
    createdById: 'HashId'
    description: 'String'
    events: 'EventConnection'
    id: 'HashId'
    isAdmin: 'Boolean'
    isCreator: 'Boolean'
    memberCount: 'Int'
    members: 'User'
    name: 'String'
    updatedAt: 'Date'
  }
  Me: { // field return type name
    chats: 'Chat'
    createdAt: 'Date'
    friends: 'FriendConnection'
    id: 'HashId'
    name: 'String'
    requests: 'Request'
    sentRequests: 'Request'
    updatedAt: 'Date'
    username: 'String'
  }
  MembersAdded: { // field return type name
    chat: 'Chat'
    chatId: 'HashId'
    createdAt: 'Date'
    createdBy: 'User'
    createdById: 'HashId'
    id: 'HashId'
    isCreator: 'Boolean'
    membersAdded: 'User'
    updatedAt: 'Date'
  }
  MembersRemoved: { // field return type name
    chat: 'Chat'
    chatId: 'HashId'
    createdAt: 'Date'
    createdBy: 'User'
    createdById: 'HashId'
    id: 'HashId'
    isCreator: 'Boolean'
    membersRemoved: 'User'
    updatedAt: 'Date'
  }
  Message: { // field return type name
    chat: 'Chat'
    chatId: 'HashId'
    content: 'String'
    createdAt: 'Date'
    createdBy: 'User'
    createdById: 'HashId'
    id: 'HashId'
    isCreator: 'Boolean'
    likedBy: 'User'
    updatedAt: 'Date'
  }
  Mutation: { // field return type name
    acceptRequest: 'Alert'
    addAdminsToGroupChat: 'AdminsAdded'
    addMembersToGroupChat: 'MembersAdded'
    cancelRequest: 'Request'
    createDirectMessageChat: 'DirectMessageChat'
    createGroupChat: 'GroupChat'
    createMessage: 'Message'
    declineRequest: 'Alert'
    deleteChat: 'DeletedChat'
    deleteEvent: 'DeletedEvent'
    deleteFriend: 'Stranger'
    removeAdminsFromGroupChat: 'AdminsRemoved'
    removeMembersFromGroupChat: 'MembersRemoved'
    sendFriendRequest: 'FriendRequest'
    updateGroupChatDescription: 'DescriptionUpdated'
    updateGroupChatName: 'NameUpdated'
    updateMessage: 'Message'
    updateUser: 'Me'
  }
  NameUpdated: { // field return type name
    chat: 'Chat'
    chatId: 'HashId'
    createdAt: 'Date'
    createdBy: 'User'
    createdById: 'HashId'
    id: 'HashId'
    isCreator: 'Boolean'
    nameAfter: 'String'
    nameBefore: 'String'
    updatedAt: 'Date'
  }
  PageInfo: { // field return type name
    endCursor: 'String'
    hasNextPage: 'Boolean'
    hasPreviousPage: 'Boolean'
    startCursor: 'String'
  }
  Query: { // field return type name
    chat: 'Chat'
    chats: 'Chat'
    events: 'EventConnection'
    friends: 'Friend'
    me: 'Me'
    message: 'Event'
    notifications: 'Notification'
    requests: 'Request'
    user: 'User'
    users: 'UserConnection'
  }
  Response: { // field return type name
    status: 'ResponseStatus'
  }
  Stranger: { // field return type name
    createdAt: 'Date'
    friendRequest: 'FriendRequest'
    id: 'HashId'
    mutualFriends: 'FriendConnection'
    name: 'String'
    status: 'StrangerStatus'
    updatedAt: 'Date'
    username: 'String'
  }
  Subscription: { // field return type name
    chatCreated: 'Chat'
    chatDeleted: 'DeletedChat'
    chatUpdated: 'ChatUpdate'
    chats: 'ChatSubscriptionResult'
    eventCreated: 'Event'
    eventDeleted: 'DeletedEvent'
    eventUpdated: 'Event'
    events: 'Event'
    friends: 'User'
    notifications: 'Notification'
    requestAccepted: 'Request'
    requestCancelled: 'Request'
    requestDeclined: 'Request'
    requestSent: 'Request'
    requests: 'Request'
  }
  UserConnection: { // field return type name
    edges: 'UserEdge'
    pageInfo: 'PageInfo'
  }
  UserEdge: { // field return type name
    cursor: 'String'
    node: 'User'
  }
  Alert: { // field return type name
    createdAt: 'Date'
    createdBy: 'User'
    createdById: 'HashId'
    id: 'HashId'
    isCreator: 'Boolean'
    recipients: 'User'
  }
  Chat: { // field return type name
    createdAt: 'Date'
    createdBy: 'User'
    createdById: 'HashId'
    id: 'HashId'
    isCreator: 'Boolean'
    updatedAt: 'Date'
  }
  ChatUpdate: { // field return type name
    chat: 'Chat'
    chatId: 'HashId'
    createdAt: 'Date'
    createdBy: 'User'
    createdById: 'HashId'
    id: 'HashId'
    isCreator: 'Boolean'
    updatedAt: 'Date'
  }
  Event: { // field return type name
    chat: 'Chat'
    chatId: 'HashId'
    createdAt: 'Date'
    createdBy: 'User'
    createdById: 'HashId'
    id: 'HashId'
    isCreator: 'Boolean'
    updatedAt: 'Date'
  }
  KnownUser: { // field return type name
    chats: 'Chat'
    friends: 'FriendConnection'
  }
  Notification: { // field return type name
    createdAt: 'Date'
    createdBy: 'User'
    createdById: 'HashId'
    id: 'HashId'
    isCreator: 'Boolean'
  }
  Request: { // field return type name
    createdAt: 'Date'
    createdBy: 'User'
    createdById: 'HashId'
    id: 'HashId'
    isCreator: 'Boolean'
    recipient: 'User'
    recipientId: 'HashId'
    response: 'Response'
    status: 'RequestStatus'
  }
  User: { // field return type name
    createdAt: 'Date'
    id: 'HashId'
    name: 'String'
    updatedAt: 'Date'
    username: 'String'
  }
}

export interface NexusGenArgTypes {
  DirectMessageChat: {
    events: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
    }
  }
  Friend: {
    friends: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
    }
  }
  GroupChat: {
    events: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
    }
  }
  Me: {
    friends: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
    }
    requests: { // args
      status?: NexusGenEnums['RequestStatus'] | null; // RequestStatus
    }
    sentRequests: { // args
      status?: NexusGenEnums['RequestStatus'] | null; // RequestStatus
    }
  }
  Mutation: {
    acceptRequest: { // args
      requestId: NexusGenScalars['HashId']; // HashId!
    }
    addAdminsToGroupChat: { // args
      chatId: NexusGenScalars['HashId']; // HashId!
      members: NexusGenScalars['HashId'][]; // [HashId!]!
    }
    addMembersToGroupChat: { // args
      chatId: NexusGenScalars['HashId']; // HashId!
      members: NexusGenScalars['HashId'][]; // [HashId!]!
    }
    cancelRequest: { // args
      requestId: NexusGenScalars['HashId']; // HashId!
    }
    createDirectMessageChat: { // args
      friendId: NexusGenScalars['HashId']; // HashId!
    }
    createGroupChat: { // args
      data: NexusGenInputs['CreateGroupChatInput']; // CreateGroupChatInput!
    }
    createMessage: { // args
      chatId: NexusGenScalars['HashId']; // HashId!
      content: string; // String!
    }
    declineRequest: { // args
      requestId: NexusGenScalars['HashId']; // HashId!
    }
    deleteChat: { // args
      chatId: NexusGenScalars['HashId']; // HashId!
    }
    deleteEvent: { // args
      eventId?: NexusGenScalars['HashId'] | null; // HashId
    }
    deleteFriend: { // args
      friendId: NexusGenScalars['HashId']; // HashId!
    }
    removeAdminsFromGroupChat: { // args
      chatId: NexusGenScalars['HashId']; // HashId!
      members: NexusGenScalars['HashId'][]; // [HashId!]!
    }
    removeMembersFromGroupChat: { // args
      chatId: NexusGenScalars['HashId']; // HashId!
      members: NexusGenScalars['HashId'][]; // [HashId!]!
    }
    sendFriendRequest: { // args
      strangerId: NexusGenScalars['HashId']; // HashId!
    }
    updateGroupChatDescription: { // args
      chatId: NexusGenScalars['HashId']; // HashId!
      description: string; // String!
    }
    updateGroupChatName: { // args
      chatId: NexusGenScalars['HashId']; // HashId!
      name: string; // String!
    }
    updateMessage: { // args
      content: string; // String!
      messageId: NexusGenScalars['HashId']; // HashId!
    }
    updateUser: { // args
      name: string; // String!
    }
  }
  Query: {
    chat: { // args
      chatId: NexusGenScalars['HashId']; // HashId!
    }
    events: { // args
      after?: string | null; // String
      before?: string | null; // String
      chatId: NexusGenScalars['HashId']; // HashId!
      first?: number | null; // Int
      last?: number | null; // Int
    }
    message: { // args
      messageId: NexusGenScalars['HashId']; // HashId!
    }
    requests: { // args
      status?: NexusGenEnums['RequestStatus'] | null; // RequestStatus
    }
    user: { // args
      userId: NexusGenScalars['HashId']; // HashId!
    }
    users: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      orderBy?: NexusGenInputs['UserOrderBy'] | null; // UserOrderBy
      usernameFilter?: string | null; // String
    }
  }
  Stranger: {
    mutualFriends: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
    }
  }
  Subscription: {
    eventCreated: { // args
      chatId?: NexusGenScalars['HashId'] | null; // HashId
    }
    eventDeleted: { // args
      chatId?: NexusGenScalars['HashId'] | null; // HashId
    }
    eventUpdated: { // args
      chatId?: NexusGenScalars['HashId'] | null; // HashId
    }
    events: { // args
      chatId?: NexusGenScalars['HashId'] | null; // HashId
    }
  }
  KnownUser: {
    friends: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
    }
  }
}

export interface NexusGenAbstractTypeMembers {
  ChatSubscriptionResult: "AdminsAdded" | "AdminsRemoved" | "DescriptionUpdated" | "DirectMessageChat" | "GroupChat" | "MembersAdded" | "MembersRemoved" | "NameUpdated"
  Alert: "ChatCreatedAlert" | "ChatDeletedAlert" | "FriendCreatedAlert" | "FriendDeletedAlert"
  Chat: "DeletedChat" | "DirectMessageChat" | "GroupChat"
  ChatUpdate: "AdminsAdded" | "AdminsRemoved" | "DescriptionUpdated" | "MembersAdded" | "MembersRemoved" | "NameUpdated"
  Event: "AdminsAdded" | "AdminsRemoved" | "DeletedEvent" | "DescriptionUpdated" | "MembersAdded" | "MembersRemoved" | "Message" | "NameUpdated"
  KnownUser: "Friend" | "Me"
  Notification: "ChatCreatedAlert" | "ChatDeletedAlert" | "FriendCreatedAlert" | "FriendDeletedAlert" | "FriendRequest"
  Request: "FriendRequest"
  User: "Friend" | "Me" | "Stranger"
}

export interface NexusGenTypeInterfaces {
  AdminsAdded: "ChatUpdate" | "Event"
  AdminsRemoved: "ChatUpdate" | "Event"
  ChatCreatedAlert: "Alert" | "Notification"
  ChatDeletedAlert: "Alert" | "Notification"
  DeletedChat: "Chat"
  DeletedEvent: "Event"
  DescriptionUpdated: "ChatUpdate" | "Event"
  DirectMessageChat: "Chat"
  Friend: "KnownUser" | "User"
  FriendCreatedAlert: "Alert" | "Notification"
  FriendDeletedAlert: "Alert" | "Notification"
  FriendRequest: "Notification" | "Request"
  GroupChat: "Chat"
  Me: "KnownUser" | "User"
  MembersAdded: "ChatUpdate" | "Event"
  MembersRemoved: "ChatUpdate" | "Event"
  Message: "Event"
  NameUpdated: "ChatUpdate" | "Event"
  Stranger: "User"
  Alert: "Notification"
  ChatUpdate: "Event"
  Request: "Notification"
}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = keyof NexusGenInputs;

export type NexusGenEnumNames = keyof NexusGenEnums;

export type NexusGenInterfaceNames = keyof NexusGenInterfaces;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = keyof NexusGenUnions;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType = "Alert" | "Chat" | "ChatSubscriptionResult" | "ChatUpdate" | "Event" | "KnownUser" | "Notification" | "Request" | "User";

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false
    resolveType: true
    __typename: false
  }
}

export interface NexusGenTypes {
  context: IContext;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginInputTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
    
    /**
     * Authorization for an individual field. Returning "true"
     * or "Promise<true>" means the field can be accessed.
     * Returning "false" or "Promise<false>" will respond
     * with a "Not Authorized" error for the field.
     * Returning or throwing an error will also prevent the
     * resolver from executing.
     */
    authorize?: FieldAuthorizeResolver<TypeName, FieldName>
  }
  interface NexusGenPluginInputFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
  interface NexusGenPluginArgConfig {
  }
}