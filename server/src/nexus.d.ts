/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */


import type { IContext } from "./graphql/context.interface"
import type { core, connectionPluginCore } from "nexus"
import type { FieldAuthorizeResolver } from "nexus/dist/plugins/fieldAuthorizePlugin"
declare global {
  interface NexusGenCustomInputMethods<TypeName extends string> {
    /**
     * Date custom scalar type
     */
    date<FieldName extends string>(fieldName: FieldName, opts?: core.CommonInputFieldConfig<TypeName, FieldName>): void // "Date";
    hashId<FieldName extends string>(fieldName: FieldName, opts?: core.CommonInputFieldConfig<TypeName, FieldName>): void // "HashId";
  }
}
declare global {
  interface NexusGenCustomOutputMethods<TypeName extends string> {
    /**
     * Date custom scalar type
     */
    date<FieldName extends string>(fieldName: FieldName, ...opts: core.ScalarOutSpread<TypeName, FieldName>): void // "Date";
    hashId<FieldName extends string>(fieldName: FieldName, ...opts: core.ScalarOutSpread<TypeName, FieldName>): void // "HashId";
    /**
     * Adds a Relay-style connection to the type, with numerous options for configuration
     *
     * @see https://nexusjs.org/docs/plugins/connection
     */
    connectionField<FieldName extends string>(
      fieldName: FieldName,
      config: connectionPluginCore.ConnectionFieldConfig<TypeName, FieldName>
    ): void
  }
}


declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  CreateGroupChatInput: { // input type
    description?: string | null; // String
    memberIds?: NexusGenScalars['HashId'][] | null; // [HashId!]
    name?: string | null; // String
  }
  UserOrderBy: { // input type
    createdAt?: NexusGenEnums['Sort'] | null; // Sort
    email?: NexusGenEnums['Sort'] | null; // Sort
    id?: NexusGenEnums['Sort'] | null; // Sort
    name?: NexusGenEnums['Sort'] | null; // Sort
    updatedAt?: NexusGenEnums['Sort'] | null; // Sort
    username?: NexusGenEnums['Sort'] | null; // Sort
  }
}

export interface NexusGenEnums {
  AlertState: "ALL" | "UNSEEN"
  RequestState: "ACCEPTED" | "CANCELLED" | "DECLINED" | "SENT"
  Role: "ADMIN" | "BASIC" | "OWNER"
  Sort: "asc" | "desc"
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
  Date: any
  HashId: any
}

export interface NexusGenObjects {
  ChatAdminAccessGrantedAlert: { // root type
    chatId: NexusGenScalars['HashId']; // HashId!
    createdAt: NexusGenScalars['Date']; // Date!
    createdById: NexusGenScalars['HashId']; // HashId!
    id: NexusGenScalars['HashId']; // HashId!
  }
  ChatAdminAccessRevokedAlert: { // root type
    chatId: NexusGenScalars['HashId']; // HashId!
    createdAt: NexusGenScalars['Date']; // Date!
    createdById: NexusGenScalars['HashId']; // HashId!
    id: NexusGenScalars['HashId']; // HashId!
  }
  ChatDeletedAlert: { // root type
    createdAt: NexusGenScalars['Date']; // Date!
    createdById: NexusGenScalars['HashId']; // HashId!
    id: NexusGenScalars['HashId']; // HashId!
  }
  ChatMember: { // root type
    addedById: NexusGenScalars['HashId']; // HashId!
    chatId: NexusGenScalars['HashId']; // HashId!
    role: NexusGenEnums['Role']; // Role!
    userId: NexusGenScalars['HashId']; // HashId!
  }
  ChatMemberAccessGrantedAlert: { // root type
    chatId: NexusGenScalars['HashId']; // HashId!
    createdAt: NexusGenScalars['Date']; // Date!
    createdById: NexusGenScalars['HashId']; // HashId!
    id: NexusGenScalars['HashId']; // HashId!
  }
  ChatMemberAccessRevokedAlert: { // root type
    chatId: NexusGenScalars['HashId']; // HashId!
    createdAt: NexusGenScalars['Date']; // Date!
    createdById: NexusGenScalars['HashId']; // HashId!
    id: NexusGenScalars['HashId']; // HashId!
  }
  DeletedChat: { // root type
    createdAt?: NexusGenScalars['Date'] | null; // Date
    createdById: NexusGenScalars['HashId']; // HashId!
    deletedAt: NexusGenScalars['Date']; // Date!
    id: NexusGenScalars['HashId']; // HashId!
    updatedAt?: NexusGenScalars['Date'] | null; // Date
  }
  DeletedEvent: { // root type
    chatId: NexusGenScalars['HashId']; // HashId!
    createdAt: NexusGenScalars['Date']; // Date!
    createdById: NexusGenScalars['HashId']; // HashId!
    deletedAt: NexusGenScalars['Date']; // Date!
    id: NexusGenScalars['HashId']; // HashId!
    updatedAt: NexusGenScalars['Date']; // Date!
  }
  DeletedMember: { // root type
    addedById: NexusGenScalars['HashId']; // HashId!
    chatId: NexusGenScalars['HashId']; // HashId!
    deletedById: NexusGenScalars['HashId']; // HashId!
    role: NexusGenEnums['Role']; // Role!
    userId: NexusGenScalars['HashId']; // HashId!
  }
  DescriptionUpdatedEvent: { // root type
    chatId: NexusGenScalars['HashId']; // HashId!
    createdAt: NexusGenScalars['Date']; // Date!
    createdById: NexusGenScalars['HashId']; // HashId!
    id: NexusGenScalars['HashId']; // HashId!
    updatedAt: NexusGenScalars['Date']; // Date!
  }
  DirectMessageChat: { // root type
    createdAt?: NexusGenScalars['Date'] | null; // Date
    createdById: NexusGenScalars['HashId']; // HashId!
    id: NexusGenScalars['HashId']; // HashId!
    updatedAt?: NexusGenScalars['Date'] | null; // Date
  }
  EventConnection: { // root type
    edges?: Array<NexusGenRootTypes['EventEdge'] | null> | null; // [EventEdge]
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
  }
  EventEdge: { // root type
    cursor: string; // String!
    node?: NexusGenRootTypes['Event'] | null; // Event
  }
  Friend: { // root type
    createdAt: NexusGenScalars['Date']; // Date!
    id: NexusGenScalars['HashId']; // HashId!
    name?: string | null; // String
    updatedAt: NexusGenScalars['Date']; // Date!
    username: string; // String!
  }
  FriendConnection: { // root type
    edges?: Array<NexusGenRootTypes['FriendEdge'] | null> | null; // [FriendEdge]
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
  }
  FriendDeletedAlert: { // root type
    createdAt: NexusGenScalars['Date']; // Date!
    createdById: NexusGenScalars['HashId']; // HashId!
    id: NexusGenScalars['HashId']; // HashId!
  }
  FriendEdge: { // root type
    cursor: string; // String!
    node?: NexusGenRootTypes['Friend'] | null; // Friend
  }
  FriendRequest: { // root type
    createdAt: NexusGenScalars['Date']; // Date!
    createdById: NexusGenScalars['HashId']; // HashId!
    id: NexusGenScalars['HashId']; // HashId!
    recipientId: NexusGenScalars['HashId']; // HashId!
    state: NexusGenEnums['RequestState']; // RequestState!
  }
  GroupChat: { // root type
    createdAt?: NexusGenScalars['Date'] | null; // Date
    createdById: NexusGenScalars['HashId']; // HashId!
    description?: string | null; // String
    id: NexusGenScalars['HashId']; // HashId!
    name: string; // String!
    updatedAt?: NexusGenScalars['Date'] | null; // Date
  }
  Me: { // root type
    createdAt: NexusGenScalars['Date']; // Date!
    id: NexusGenScalars['HashId']; // HashId!
    name?: string | null; // String
    updatedAt: NexusGenScalars['Date']; // Date!
    username: string; // String!
  }
  MemberConnection: { // root type
    edges?: Array<NexusGenRootTypes['MemberEdge'] | null> | null; // [MemberEdge]
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
  }
  MemberEdge: { // root type
    cursor: string; // String!
    node?: NexusGenRootTypes['Member'] | null; // Member
  }
  MembersAddedEvent: { // root type
    chatId: NexusGenScalars['HashId']; // HashId!
    createdAt: NexusGenScalars['Date']; // Date!
    createdById: NexusGenScalars['HashId']; // HashId!
    id: NexusGenScalars['HashId']; // HashId!
    updatedAt: NexusGenScalars['Date']; // Date!
  }
  MembersRemovedEvent: { // root type
    chatId: NexusGenScalars['HashId']; // HashId!
    createdAt: NexusGenScalars['Date']; // Date!
    createdById: NexusGenScalars['HashId']; // HashId!
    id: NexusGenScalars['HashId']; // HashId!
    updatedAt: NexusGenScalars['Date']; // Date!
  }
  MessageEvent: { // root type
    chatId: NexusGenScalars['HashId']; // HashId!
    createdAt: NexusGenScalars['Date']; // Date!
    createdById: NexusGenScalars['HashId']; // HashId!
    id: NexusGenScalars['HashId']; // HashId!
    updatedAt: NexusGenScalars['Date']; // Date!
  }
  Mutation: {};
  NameUpdatedEvent: { // root type
    chatId: NexusGenScalars['HashId']; // HashId!
    createdAt: NexusGenScalars['Date']; // Date!
    createdById: NexusGenScalars['HashId']; // HashId!
    id: NexusGenScalars['HashId']; // HashId!
    updatedAt: NexusGenScalars['Date']; // Date!
  }
  PageInfo: { // root type
    endCursor?: string | null; // String
    hasNextPage: boolean; // Boolean!
    hasPreviousPage: boolean; // Boolean!
    startCursor?: string | null; // String
  }
  Query: {};
  RequestAcceptedAlert: { // root type
    createdAt: NexusGenScalars['Date']; // Date!
    createdById: NexusGenScalars['HashId']; // HashId!
    id: NexusGenScalars['HashId']; // HashId!
    requestId: NexusGenScalars['HashId']; // HashId!
  }
  RequestDeclinedAlert: { // root type
    createdAt: NexusGenScalars['Date']; // Date!
    createdById: NexusGenScalars['HashId']; // HashId!
    id: NexusGenScalars['HashId']; // HashId!
    requestId: NexusGenScalars['HashId']; // HashId!
  }
  RoleChangedEvent: { // root type
    chatId: NexusGenScalars['HashId']; // HashId!
    createdAt: NexusGenScalars['Date']; // Date!
    createdById: NexusGenScalars['HashId']; // HashId!
    id: NexusGenScalars['HashId']; // HashId!
    newRole: NexusGenEnums['Role']; // Role!
    updatedAt: NexusGenScalars['Date']; // Date!
  }
  Stranger: { // root type
    createdAt: NexusGenScalars['Date']; // Date!
    id: NexusGenScalars['HashId']; // HashId!
    name?: string | null; // String
    updatedAt: NexusGenScalars['Date']; // Date!
    username: string; // String!
  }
  Subscription: {};
  UserConnection: { // root type
    edges?: Array<NexusGenRootTypes['UserEdge'] | null> | null; // [UserEdge]
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
  }
  UserEdge: { // root type
    cursor: string; // String!
    node?: NexusGenRootTypes['User'] | null; // User
  }
}

export interface NexusGenInterfaces {
  Alert: NexusGenRootTypes['ChatAdminAccessGrantedAlert'] | NexusGenRootTypes['ChatAdminAccessRevokedAlert'] | NexusGenRootTypes['ChatDeletedAlert'] | NexusGenRootTypes['ChatMemberAccessGrantedAlert'] | NexusGenRootTypes['ChatMemberAccessRevokedAlert'] | NexusGenRootTypes['FriendDeletedAlert'] | NexusGenRootTypes['RequestAcceptedAlert'] | NexusGenRootTypes['RequestDeclinedAlert'];
  Chat: NexusGenRootTypes['DeletedChat'] | NexusGenRootTypes['DirectMessageChat'] | NexusGenRootTypes['GroupChat'];
  ChatAccessAlert: NexusGenRootTypes['ChatAdminAccessGrantedAlert'] | NexusGenRootTypes['ChatAdminAccessRevokedAlert'] | NexusGenRootTypes['ChatMemberAccessGrantedAlert'] | NexusGenRootTypes['ChatMemberAccessRevokedAlert'];
  ChatUpdateEvent: NexusGenRootTypes['DescriptionUpdatedEvent'] | NexusGenRootTypes['MembersAddedEvent'] | NexusGenRootTypes['MembersRemovedEvent'] | NexusGenRootTypes['NameUpdatedEvent'] | NexusGenRootTypes['RoleChangedEvent'];
  Event: NexusGenRootTypes['DeletedEvent'] | NexusGenRootTypes['DescriptionUpdatedEvent'] | NexusGenRootTypes['MembersAddedEvent'] | NexusGenRootTypes['MembersRemovedEvent'] | NexusGenRootTypes['MessageEvent'] | NexusGenRootTypes['NameUpdatedEvent'] | NexusGenRootTypes['RoleChangedEvent'];
  KnownUser: NexusGenRootTypes['Friend'] | NexusGenRootTypes['Me'];
  Member: NexusGenRootTypes['ChatMember'] | NexusGenRootTypes['DeletedMember'];
  MemberAlterationEvent: NexusGenRootTypes['MembersAddedEvent'] | NexusGenRootTypes['MembersRemovedEvent'] | NexusGenRootTypes['RoleChangedEvent'];
  Notification: NexusGenRootTypes['ChatAdminAccessGrantedAlert'] | NexusGenRootTypes['ChatAdminAccessRevokedAlert'] | NexusGenRootTypes['ChatDeletedAlert'] | NexusGenRootTypes['ChatMemberAccessGrantedAlert'] | NexusGenRootTypes['ChatMemberAccessRevokedAlert'] | NexusGenRootTypes['FriendDeletedAlert'] | NexusGenRootTypes['FriendRequest'] | NexusGenRootTypes['RequestAcceptedAlert'] | NexusGenRootTypes['RequestDeclinedAlert'];
  Request: NexusGenRootTypes['FriendRequest'];
  RequestResponseAlert: NexusGenRootTypes['RequestAcceptedAlert'] | NexusGenRootTypes['RequestDeclinedAlert'];
  User: NexusGenRootTypes['Friend'] | NexusGenRootTypes['Me'] | NexusGenRootTypes['Stranger'];
}

export interface NexusGenUnions {
  ChatSubscriptionResult: NexusGenRootTypes['DeletedChat'] | NexusGenRootTypes['DirectMessageChat'] | NexusGenRootTypes['GroupChat'];
}

export type NexusGenRootTypes = NexusGenInterfaces & NexusGenObjects & NexusGenUnions

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars & NexusGenEnums

export interface NexusGenFieldTypes {
  ChatAdminAccessGrantedAlert: { // field return type
    chat: NexusGenRootTypes['Chat']; // Chat!
    chatId: NexusGenScalars['HashId']; // HashId!
    createdAt: NexusGenScalars['Date']; // Date!
    createdBy: NexusGenRootTypes['User']; // User!
    createdById: NexusGenScalars['HashId']; // HashId!
    id: NexusGenScalars['HashId']; // HashId!
    isCreator: boolean; // Boolean!
    recipients: NexusGenRootTypes['User'][]; // [User!]!
  }
  ChatAdminAccessRevokedAlert: { // field return type
    chat: NexusGenRootTypes['Chat']; // Chat!
    chatId: NexusGenScalars['HashId']; // HashId!
    createdAt: NexusGenScalars['Date']; // Date!
    createdBy: NexusGenRootTypes['User']; // User!
    createdById: NexusGenScalars['HashId']; // HashId!
    id: NexusGenScalars['HashId']; // HashId!
    isCreator: boolean; // Boolean!
    recipients: NexusGenRootTypes['User'][]; // [User!]!
  }
  ChatDeletedAlert: { // field return type
    chat: NexusGenRootTypes['Chat']; // Chat!
    createdAt: NexusGenScalars['Date']; // Date!
    createdBy: NexusGenRootTypes['User']; // User!
    createdById: NexusGenScalars['HashId']; // HashId!
    id: NexusGenScalars['HashId']; // HashId!
    isCreator: boolean; // Boolean!
    recipients: NexusGenRootTypes['User'][]; // [User!]!
  }
  ChatMember: { // field return type
    addedBy: NexusGenRootTypes['User']; // User!
    addedById: NexusGenScalars['HashId']; // HashId!
    chat: NexusGenRootTypes['Chat']; // Chat!
    chatId: NexusGenScalars['HashId']; // HashId!
    role: NexusGenEnums['Role']; // Role!
    user: NexusGenRootTypes['User']; // User!
    userId: NexusGenScalars['HashId']; // HashId!
  }
  ChatMemberAccessGrantedAlert: { // field return type
    chat: NexusGenRootTypes['Chat']; // Chat!
    chatId: NexusGenScalars['HashId']; // HashId!
    createdAt: NexusGenScalars['Date']; // Date!
    createdBy: NexusGenRootTypes['User']; // User!
    createdById: NexusGenScalars['HashId']; // HashId!
    id: NexusGenScalars['HashId']; // HashId!
    isCreator: boolean; // Boolean!
    recipients: NexusGenRootTypes['User'][]; // [User!]!
  }
  ChatMemberAccessRevokedAlert: { // field return type
    chat: NexusGenRootTypes['Chat']; // Chat!
    chatId: NexusGenScalars['HashId']; // HashId!
    createdAt: NexusGenScalars['Date']; // Date!
    createdBy: NexusGenRootTypes['User']; // User!
    createdById: NexusGenScalars['HashId']; // HashId!
    id: NexusGenScalars['HashId']; // HashId!
    isCreator: boolean; // Boolean!
    recipients: NexusGenRootTypes['User'][]; // [User!]!
  }
  DeletedChat: { // field return type
    createdAt: NexusGenScalars['Date'] | null; // Date
    createdBy: NexusGenRootTypes['User']; // User!
    createdById: NexusGenScalars['HashId']; // HashId!
    deletedAt: NexusGenScalars['Date']; // Date!
    id: NexusGenScalars['HashId']; // HashId!
    isCreator: boolean; // Boolean!
    updatedAt: NexusGenScalars['Date'] | null; // Date
  }
  DeletedEvent: { // field return type
    chat: NexusGenRootTypes['Chat']; // Chat!
    chatId: NexusGenScalars['HashId']; // HashId!
    createdAt: NexusGenScalars['Date']; // Date!
    createdBy: NexusGenRootTypes['User']; // User!
    createdById: NexusGenScalars['HashId']; // HashId!
    deletedAt: NexusGenScalars['Date']; // Date!
    id: NexusGenScalars['HashId']; // HashId!
    isCreator: boolean; // Boolean!
    updatedAt: NexusGenScalars['Date']; // Date!
  }
  DeletedMember: { // field return type
    addedBy: NexusGenRootTypes['User']; // User!
    addedById: NexusGenScalars['HashId']; // HashId!
    chat: NexusGenRootTypes['Chat']; // Chat!
    chatId: NexusGenScalars['HashId']; // HashId!
    deletedBy: NexusGenRootTypes['User']; // User!
    deletedById: NexusGenScalars['HashId']; // HashId!
    role: NexusGenEnums['Role']; // Role!
    user: NexusGenRootTypes['User']; // User!
    userId: NexusGenScalars['HashId']; // HashId!
  }
  DescriptionUpdatedEvent: { // field return type
    chat: NexusGenRootTypes['Chat']; // Chat!
    chatId: NexusGenScalars['HashId']; // HashId!
    createdAt: NexusGenScalars['Date']; // Date!
    createdBy: NexusGenRootTypes['User']; // User!
    createdById: NexusGenScalars['HashId']; // HashId!
    descriptionAfter: string; // String!
    descriptionBefore: string; // String!
    id: NexusGenScalars['HashId']; // HashId!
    isCreator: boolean; // Boolean!
    updatedAt: NexusGenScalars['Date']; // Date!
  }
  DirectMessageChat: { // field return type
    createdAt: NexusGenScalars['Date'] | null; // Date
    createdBy: NexusGenRootTypes['User']; // User!
    createdById: NexusGenScalars['HashId']; // HashId!
    events: NexusGenRootTypes['EventConnection']; // EventConnection!
    friend: NexusGenRootTypes['User']; // User!
    id: NexusGenScalars['HashId']; // HashId!
    isCreator: boolean; // Boolean!
    updatedAt: NexusGenScalars['Date'] | null; // Date
  }
  EventConnection: { // field return type
    edges: Array<NexusGenRootTypes['EventEdge'] | null> | null; // [EventEdge]
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
  }
  EventEdge: { // field return type
    cursor: string; // String!
    node: NexusGenRootTypes['Event'] | null; // Event
  }
  Friend: { // field return type
    chats: NexusGenRootTypes['Chat'][]; // [Chat!]!
    createdAt: NexusGenScalars['Date']; // Date!
    friends: NexusGenRootTypes['FriendConnection']; // FriendConnection!
    id: NexusGenScalars['HashId']; // HashId!
    name: string | null; // String
    updatedAt: NexusGenScalars['Date']; // Date!
    username: string; // String!
  }
  FriendConnection: { // field return type
    edges: Array<NexusGenRootTypes['FriendEdge'] | null> | null; // [FriendEdge]
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
  }
  FriendDeletedAlert: { // field return type
    createdAt: NexusGenScalars['Date']; // Date!
    createdBy: NexusGenRootTypes['User']; // User!
    createdById: NexusGenScalars['HashId']; // HashId!
    id: NexusGenScalars['HashId']; // HashId!
    isCreator: boolean; // Boolean!
    recipients: NexusGenRootTypes['User'][]; // [User!]!
    user: NexusGenRootTypes['Stranger']; // Stranger!
  }
  FriendEdge: { // field return type
    cursor: string; // String!
    node: NexusGenRootTypes['Friend'] | null; // Friend
  }
  FriendRequest: { // field return type
    createdAt: NexusGenScalars['Date']; // Date!
    createdBy: NexusGenRootTypes['User']; // User!
    createdById: NexusGenScalars['HashId']; // HashId!
    id: NexusGenScalars['HashId']; // HashId!
    isCreator: boolean; // Boolean!
    recipient: NexusGenRootTypes['User']; // User!
    recipientId: NexusGenScalars['HashId']; // HashId!
    state: NexusGenEnums['RequestState']; // RequestState!
  }
  GroupChat: { // field return type
    createdAt: NexusGenScalars['Date'] | null; // Date
    createdBy: NexusGenRootTypes['User']; // User!
    createdById: NexusGenScalars['HashId']; // HashId!
    description: string | null; // String
    events: NexusGenRootTypes['EventConnection']; // EventConnection!
    id: NexusGenScalars['HashId']; // HashId!
    isCreator: boolean; // Boolean!
    memberCount: number; // Int!
    members: NexusGenRootTypes['MemberConnection']; // MemberConnection!
    name: string; // String!
    role: NexusGenEnums['Role']; // Role!
    updatedAt: NexusGenScalars['Date'] | null; // Date
  }
  Me: { // field return type
    chats: NexusGenRootTypes['Chat'][]; // [Chat!]!
    createdAt: NexusGenScalars['Date']; // Date!
    friends: NexusGenRootTypes['FriendConnection']; // FriendConnection!
    id: NexusGenScalars['HashId']; // HashId!
    name: string | null; // String
    requests: NexusGenRootTypes['Request'][]; // [Request!]!
    sentRequests: NexusGenRootTypes['Request'][]; // [Request!]!
    updatedAt: NexusGenScalars['Date']; // Date!
    username: string; // String!
  }
  MemberConnection: { // field return type
    edges: Array<NexusGenRootTypes['MemberEdge'] | null> | null; // [MemberEdge]
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
  }
  MemberEdge: { // field return type
    cursor: string; // String!
    node: NexusGenRootTypes['Member'] | null; // Member
  }
  MembersAddedEvent: { // field return type
    chat: NexusGenRootTypes['Chat']; // Chat!
    chatId: NexusGenScalars['HashId']; // HashId!
    createdAt: NexusGenScalars['Date']; // Date!
    createdBy: NexusGenRootTypes['User']; // User!
    createdById: NexusGenScalars['HashId']; // HashId!
    id: NexusGenScalars['HashId']; // HashId!
    isCreator: boolean; // Boolean!
    members: NexusGenRootTypes['Member'][]; // [Member!]!
    updatedAt: NexusGenScalars['Date']; // Date!
  }
  MembersRemovedEvent: { // field return type
    chat: NexusGenRootTypes['Chat']; // Chat!
    chatId: NexusGenScalars['HashId']; // HashId!
    createdAt: NexusGenScalars['Date']; // Date!
    createdBy: NexusGenRootTypes['User']; // User!
    createdById: NexusGenScalars['HashId']; // HashId!
    id: NexusGenScalars['HashId']; // HashId!
    isCreator: boolean; // Boolean!
    members: NexusGenRootTypes['Member'][]; // [Member!]!
    updatedAt: NexusGenScalars['Date']; // Date!
  }
  MessageEvent: { // field return type
    chat: NexusGenRootTypes['Chat']; // Chat!
    chatId: NexusGenScalars['HashId']; // HashId!
    content: string; // String!
    createdAt: NexusGenScalars['Date']; // Date!
    createdBy: NexusGenRootTypes['User']; // User!
    createdById: NexusGenScalars['HashId']; // HashId!
    id: NexusGenScalars['HashId']; // HashId!
    isCreator: boolean; // Boolean!
    likedBy: NexusGenRootTypes['User'][]; // [User!]!
    updatedAt: NexusGenScalars['Date']; // Date!
  }
  Mutation: { // field return type
    acceptRequest: NexusGenRootTypes['Request'] | null; // Request
    acknowledgeAlert: NexusGenRootTypes['Alert'] | null; // Alert
    addMembers: NexusGenRootTypes['MembersAddedEvent'] | null; // MembersAddedEvent
    cancelRequest: NexusGenRootTypes['Request'] | null; // Request
    changeRole: NexusGenRootTypes['RoleChangedEvent'] | null; // RoleChangedEvent
    createDirectMessageChat: NexusGenRootTypes['DirectMessageChat'] | null; // DirectMessageChat
    createGroupChat: NexusGenRootTypes['GroupChat'] | null; // GroupChat
    createMessage: NexusGenRootTypes['MessageEvent'] | null; // MessageEvent
    declineRequest: NexusGenRootTypes['Request'] | null; // Request
    deleteChat: NexusGenRootTypes['DeletedChat'] | null; // DeletedChat
    deleteEvent: NexusGenRootTypes['DeletedEvent'] | null; // DeletedEvent
    deleteFriend: NexusGenRootTypes['Stranger'] | null; // Stranger
    leaveGroupChat: NexusGenRootTypes['MembersRemovedEvent'] | null; // MembersRemovedEvent
    removeMembers: NexusGenRootTypes['MembersRemovedEvent'] | null; // MembersRemovedEvent
    sendFriendRequest: NexusGenRootTypes['FriendRequest'] | null; // FriendRequest
    updateGroupChatDescription: NexusGenRootTypes['DescriptionUpdatedEvent'] | null; // DescriptionUpdatedEvent
    updateGroupChatName: NexusGenRootTypes['NameUpdatedEvent'] | null; // NameUpdatedEvent
    updateMessage: NexusGenRootTypes['MessageEvent'] | null; // MessageEvent
    updateUser: NexusGenRootTypes['Me'] | null; // Me
  }
  NameUpdatedEvent: { // field return type
    chat: NexusGenRootTypes['Chat']; // Chat!
    chatId: NexusGenScalars['HashId']; // HashId!
    createdAt: NexusGenScalars['Date']; // Date!
    createdBy: NexusGenRootTypes['User']; // User!
    createdById: NexusGenScalars['HashId']; // HashId!
    id: NexusGenScalars['HashId']; // HashId!
    isCreator: boolean; // Boolean!
    nameAfter: string; // String!
    nameBefore: string; // String!
    updatedAt: NexusGenScalars['Date']; // Date!
  }
  PageInfo: { // field return type
    endCursor: string | null; // String
    hasNextPage: boolean; // Boolean!
    hasPreviousPage: boolean; // Boolean!
    startCursor: string | null; // String
  }
  Query: { // field return type
    alerts: NexusGenRootTypes['Alert'][]; // [Alert!]!
    chat: NexusGenRootTypes['Chat'] | null; // Chat
    chats: NexusGenRootTypes['Chat'][]; // [Chat!]!
    event: NexusGenRootTypes['Event'] | null; // Event
    events: NexusGenRootTypes['EventConnection']; // EventConnection!
    friends: NexusGenRootTypes['Friend'][]; // [Friend!]!
    me: NexusGenRootTypes['Me'] | null; // Me
    members: NexusGenRootTypes['MemberConnection']; // MemberConnection!
    notifications: NexusGenRootTypes['Notification'][]; // [Notification!]!
    requests: NexusGenRootTypes['Request'][]; // [Request!]!
    user: NexusGenRootTypes['User'] | null; // User
    users: NexusGenRootTypes['UserConnection']; // UserConnection!
  }
  RequestAcceptedAlert: { // field return type
    createdAt: NexusGenScalars['Date']; // Date!
    createdBy: NexusGenRootTypes['User']; // User!
    createdById: NexusGenScalars['HashId']; // HashId!
    id: NexusGenScalars['HashId']; // HashId!
    isCreator: boolean; // Boolean!
    recipients: NexusGenRootTypes['User'][]; // [User!]!
    request: NexusGenRootTypes['Request']; // Request!
    requestId: NexusGenScalars['HashId']; // HashId!
  }
  RequestDeclinedAlert: { // field return type
    createdAt: NexusGenScalars['Date']; // Date!
    createdBy: NexusGenRootTypes['User']; // User!
    createdById: NexusGenScalars['HashId']; // HashId!
    id: NexusGenScalars['HashId']; // HashId!
    isCreator: boolean; // Boolean!
    recipients: NexusGenRootTypes['User'][]; // [User!]!
    request: NexusGenRootTypes['Request']; // Request!
    requestId: NexusGenScalars['HashId']; // HashId!
  }
  RoleChangedEvent: { // field return type
    chat: NexusGenRootTypes['Chat']; // Chat!
    chatId: NexusGenScalars['HashId']; // HashId!
    createdAt: NexusGenScalars['Date']; // Date!
    createdBy: NexusGenRootTypes['User']; // User!
    createdById: NexusGenScalars['HashId']; // HashId!
    id: NexusGenScalars['HashId']; // HashId!
    isCreator: boolean; // Boolean!
    members: NexusGenRootTypes['Member'][]; // [Member!]!
    newRole: NexusGenEnums['Role']; // Role!
    updatedAt: NexusGenScalars['Date']; // Date!
  }
  Stranger: { // field return type
    createdAt: NexusGenScalars['Date']; // Date!
    friendRequest: NexusGenRootTypes['FriendRequest'] | null; // FriendRequest
    id: NexusGenScalars['HashId']; // HashId!
    mutualFriends: NexusGenRootTypes['FriendConnection']; // FriendConnection!
    name: string | null; // String
    updatedAt: NexusGenScalars['Date']; // Date!
    username: string; // String!
  }
  Subscription: { // field return type
    alerts: NexusGenRootTypes['Alert'] | null; // Alert
    chatAccessAlerts: NexusGenRootTypes['ChatAccessAlert'] | null; // ChatAccessAlert
    eventCreated: NexusGenRootTypes['Event'] | null; // Event
    eventDeleted: NexusGenRootTypes['DeletedEvent'] | null; // DeletedEvent
    eventUpdated: NexusGenRootTypes['Event'] | null; // Event
    events: NexusGenRootTypes['Event'] | null; // Event
    notifications: NexusGenRootTypes['Notification'] | null; // Notification
    requests: NexusGenRootTypes['Request'] | null; // Request
  }
  UserConnection: { // field return type
    edges: Array<NexusGenRootTypes['UserEdge'] | null> | null; // [UserEdge]
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
  }
  UserEdge: { // field return type
    cursor: string; // String!
    node: NexusGenRootTypes['User'] | null; // User
  }
  Alert: { // field return type
    createdAt: NexusGenScalars['Date']; // Date!
    createdBy: NexusGenRootTypes['User']; // User!
    createdById: NexusGenScalars['HashId']; // HashId!
    id: NexusGenScalars['HashId']; // HashId!
    isCreator: boolean; // Boolean!
    recipients: NexusGenRootTypes['User'][]; // [User!]!
  }
  Chat: { // field return type
    createdAt: NexusGenScalars['Date'] | null; // Date
    createdBy: NexusGenRootTypes['User']; // User!
    createdById: NexusGenScalars['HashId']; // HashId!
    id: NexusGenScalars['HashId']; // HashId!
    isCreator: boolean; // Boolean!
    updatedAt: NexusGenScalars['Date'] | null; // Date
  }
  ChatAccessAlert: { // field return type
    chat: NexusGenRootTypes['Chat']; // Chat!
    chatId: NexusGenScalars['HashId']; // HashId!
    createdAt: NexusGenScalars['Date']; // Date!
    createdBy: NexusGenRootTypes['User']; // User!
    createdById: NexusGenScalars['HashId']; // HashId!
    id: NexusGenScalars['HashId']; // HashId!
    isCreator: boolean; // Boolean!
    recipients: NexusGenRootTypes['User'][]; // [User!]!
  }
  ChatUpdateEvent: { // field return type
    chat: NexusGenRootTypes['Chat']; // Chat!
    chatId: NexusGenScalars['HashId']; // HashId!
    createdAt: NexusGenScalars['Date']; // Date!
    createdBy: NexusGenRootTypes['User']; // User!
    createdById: NexusGenScalars['HashId']; // HashId!
    id: NexusGenScalars['HashId']; // HashId!
    isCreator: boolean; // Boolean!
    updatedAt: NexusGenScalars['Date']; // Date!
  }
  Event: { // field return type
    chat: NexusGenRootTypes['Chat']; // Chat!
    chatId: NexusGenScalars['HashId']; // HashId!
    createdAt: NexusGenScalars['Date']; // Date!
    createdBy: NexusGenRootTypes['User']; // User!
    createdById: NexusGenScalars['HashId']; // HashId!
    id: NexusGenScalars['HashId']; // HashId!
    isCreator: boolean; // Boolean!
    updatedAt: NexusGenScalars['Date']; // Date!
  }
  KnownUser: { // field return type
    chats: NexusGenRootTypes['Chat'][]; // [Chat!]!
    friends: NexusGenRootTypes['FriendConnection']; // FriendConnection!
  }
  Member: { // field return type
    addedBy: NexusGenRootTypes['User']; // User!
    addedById: NexusGenScalars['HashId']; // HashId!
    chat: NexusGenRootTypes['Chat']; // Chat!
    chatId: NexusGenScalars['HashId']; // HashId!
    role: NexusGenEnums['Role']; // Role!
    user: NexusGenRootTypes['User']; // User!
    userId: NexusGenScalars['HashId']; // HashId!
  }
  MemberAlterationEvent: { // field return type
    chat: NexusGenRootTypes['Chat']; // Chat!
    chatId: NexusGenScalars['HashId']; // HashId!
    createdAt: NexusGenScalars['Date']; // Date!
    createdBy: NexusGenRootTypes['User']; // User!
    createdById: NexusGenScalars['HashId']; // HashId!
    id: NexusGenScalars['HashId']; // HashId!
    isCreator: boolean; // Boolean!
    members: NexusGenRootTypes['Member'][]; // [Member!]!
    updatedAt: NexusGenScalars['Date']; // Date!
  }
  Notification: { // field return type
    createdAt: NexusGenScalars['Date']; // Date!
    createdBy: NexusGenRootTypes['User']; // User!
    createdById: NexusGenScalars['HashId']; // HashId!
    id: NexusGenScalars['HashId']; // HashId!
    isCreator: boolean; // Boolean!
  }
  Request: { // field return type
    createdAt: NexusGenScalars['Date']; // Date!
    createdBy: NexusGenRootTypes['User']; // User!
    createdById: NexusGenScalars['HashId']; // HashId!
    id: NexusGenScalars['HashId']; // HashId!
    isCreator: boolean; // Boolean!
    recipient: NexusGenRootTypes['User']; // User!
    recipientId: NexusGenScalars['HashId']; // HashId!
    state: NexusGenEnums['RequestState']; // RequestState!
  }
  RequestResponseAlert: { // field return type
    createdAt: NexusGenScalars['Date']; // Date!
    createdBy: NexusGenRootTypes['User']; // User!
    createdById: NexusGenScalars['HashId']; // HashId!
    id: NexusGenScalars['HashId']; // HashId!
    isCreator: boolean; // Boolean!
    recipients: NexusGenRootTypes['User'][]; // [User!]!
    request: NexusGenRootTypes['Request']; // Request!
    requestId: NexusGenScalars['HashId']; // HashId!
  }
  User: { // field return type
    createdAt: NexusGenScalars['Date']; // Date!
    id: NexusGenScalars['HashId']; // HashId!
    name: string | null; // String
    updatedAt: NexusGenScalars['Date']; // Date!
    username: string; // String!
  }
}

export interface NexusGenFieldTypeNames {
  ChatAdminAccessGrantedAlert: { // field return type name
    chat: 'Chat'
    chatId: 'HashId'
    createdAt: 'Date'
    createdBy: 'User'
    createdById: 'HashId'
    id: 'HashId'
    isCreator: 'Boolean'
    recipients: 'User'
  }
  ChatAdminAccessRevokedAlert: { // field return type name
    chat: 'Chat'
    chatId: 'HashId'
    createdAt: 'Date'
    createdBy: 'User'
    createdById: 'HashId'
    id: 'HashId'
    isCreator: 'Boolean'
    recipients: 'User'
  }
  ChatDeletedAlert: { // field return type name
    chat: 'Chat'
    createdAt: 'Date'
    createdBy: 'User'
    createdById: 'HashId'
    id: 'HashId'
    isCreator: 'Boolean'
    recipients: 'User'
  }
  ChatMember: { // field return type name
    addedBy: 'User'
    addedById: 'HashId'
    chat: 'Chat'
    chatId: 'HashId'
    role: 'Role'
    user: 'User'
    userId: 'HashId'
  }
  ChatMemberAccessGrantedAlert: { // field return type name
    chat: 'Chat'
    chatId: 'HashId'
    createdAt: 'Date'
    createdBy: 'User'
    createdById: 'HashId'
    id: 'HashId'
    isCreator: 'Boolean'
    recipients: 'User'
  }
  ChatMemberAccessRevokedAlert: { // field return type name
    chat: 'Chat'
    chatId: 'HashId'
    createdAt: 'Date'
    createdBy: 'User'
    createdById: 'HashId'
    id: 'HashId'
    isCreator: 'Boolean'
    recipients: 'User'
  }
  DeletedChat: { // field return type name
    createdAt: 'Date'
    createdBy: 'User'
    createdById: 'HashId'
    deletedAt: 'Date'
    id: 'HashId'
    isCreator: 'Boolean'
    updatedAt: 'Date'
  }
  DeletedEvent: { // field return type name
    chat: 'Chat'
    chatId: 'HashId'
    createdAt: 'Date'
    createdBy: 'User'
    createdById: 'HashId'
    deletedAt: 'Date'
    id: 'HashId'
    isCreator: 'Boolean'
    updatedAt: 'Date'
  }
  DeletedMember: { // field return type name
    addedBy: 'User'
    addedById: 'HashId'
    chat: 'Chat'
    chatId: 'HashId'
    deletedBy: 'User'
    deletedById: 'HashId'
    role: 'Role'
    user: 'User'
    userId: 'HashId'
  }
  DescriptionUpdatedEvent: { // field return type name
    chat: 'Chat'
    chatId: 'HashId'
    createdAt: 'Date'
    createdBy: 'User'
    createdById: 'HashId'
    descriptionAfter: 'String'
    descriptionBefore: 'String'
    id: 'HashId'
    isCreator: 'Boolean'
    updatedAt: 'Date'
  }
  DirectMessageChat: { // field return type name
    createdAt: 'Date'
    createdBy: 'User'
    createdById: 'HashId'
    events: 'EventConnection'
    friend: 'User'
    id: 'HashId'
    isCreator: 'Boolean'
    updatedAt: 'Date'
  }
  EventConnection: { // field return type name
    edges: 'EventEdge'
    pageInfo: 'PageInfo'
  }
  EventEdge: { // field return type name
    cursor: 'String'
    node: 'Event'
  }
  Friend: { // field return type name
    chats: 'Chat'
    createdAt: 'Date'
    friends: 'FriendConnection'
    id: 'HashId'
    name: 'String'
    updatedAt: 'Date'
    username: 'String'
  }
  FriendConnection: { // field return type name
    edges: 'FriendEdge'
    pageInfo: 'PageInfo'
  }
  FriendDeletedAlert: { // field return type name
    createdAt: 'Date'
    createdBy: 'User'
    createdById: 'HashId'
    id: 'HashId'
    isCreator: 'Boolean'
    recipients: 'User'
    user: 'Stranger'
  }
  FriendEdge: { // field return type name
    cursor: 'String'
    node: 'Friend'
  }
  FriendRequest: { // field return type name
    createdAt: 'Date'
    createdBy: 'User'
    createdById: 'HashId'
    id: 'HashId'
    isCreator: 'Boolean'
    recipient: 'User'
    recipientId: 'HashId'
    state: 'RequestState'
  }
  GroupChat: { // field return type name
    createdAt: 'Date'
    createdBy: 'User'
    createdById: 'HashId'
    description: 'String'
    events: 'EventConnection'
    id: 'HashId'
    isCreator: 'Boolean'
    memberCount: 'Int'
    members: 'MemberConnection'
    name: 'String'
    role: 'Role'
    updatedAt: 'Date'
  }
  Me: { // field return type name
    chats: 'Chat'
    createdAt: 'Date'
    friends: 'FriendConnection'
    id: 'HashId'
    name: 'String'
    requests: 'Request'
    sentRequests: 'Request'
    updatedAt: 'Date'
    username: 'String'
  }
  MemberConnection: { // field return type name
    edges: 'MemberEdge'
    pageInfo: 'PageInfo'
  }
  MemberEdge: { // field return type name
    cursor: 'String'
    node: 'Member'
  }
  MembersAddedEvent: { // field return type name
    chat: 'Chat'
    chatId: 'HashId'
    createdAt: 'Date'
    createdBy: 'User'
    createdById: 'HashId'
    id: 'HashId'
    isCreator: 'Boolean'
    members: 'Member'
    updatedAt: 'Date'
  }
  MembersRemovedEvent: { // field return type name
    chat: 'Chat'
    chatId: 'HashId'
    createdAt: 'Date'
    createdBy: 'User'
    createdById: 'HashId'
    id: 'HashId'
    isCreator: 'Boolean'
    members: 'Member'
    updatedAt: 'Date'
  }
  MessageEvent: { // field return type name
    chat: 'Chat'
    chatId: 'HashId'
    content: 'String'
    createdAt: 'Date'
    createdBy: 'User'
    createdById: 'HashId'
    id: 'HashId'
    isCreator: 'Boolean'
    likedBy: 'User'
    updatedAt: 'Date'
  }
  Mutation: { // field return type name
    acceptRequest: 'Request'
    acknowledgeAlert: 'Alert'
    addMembers: 'MembersAddedEvent'
    cancelRequest: 'Request'
    changeRole: 'RoleChangedEvent'
    createDirectMessageChat: 'DirectMessageChat'
    createGroupChat: 'GroupChat'
    createMessage: 'MessageEvent'
    declineRequest: 'Request'
    deleteChat: 'DeletedChat'
    deleteEvent: 'DeletedEvent'
    deleteFriend: 'Stranger'
    leaveGroupChat: 'MembersRemovedEvent'
    removeMembers: 'MembersRemovedEvent'
    sendFriendRequest: 'FriendRequest'
    updateGroupChatDescription: 'DescriptionUpdatedEvent'
    updateGroupChatName: 'NameUpdatedEvent'
    updateMessage: 'MessageEvent'
    updateUser: 'Me'
  }
  NameUpdatedEvent: { // field return type name
    chat: 'Chat'
    chatId: 'HashId'
    createdAt: 'Date'
    createdBy: 'User'
    createdById: 'HashId'
    id: 'HashId'
    isCreator: 'Boolean'
    nameAfter: 'String'
    nameBefore: 'String'
    updatedAt: 'Date'
  }
  PageInfo: { // field return type name
    endCursor: 'String'
    hasNextPage: 'Boolean'
    hasPreviousPage: 'Boolean'
    startCursor: 'String'
  }
  Query: { // field return type name
    alerts: 'Alert'
    chat: 'Chat'
    chats: 'Chat'
    event: 'Event'
    events: 'EventConnection'
    friends: 'Friend'
    me: 'Me'
    members: 'MemberConnection'
    notifications: 'Notification'
    requests: 'Request'
    user: 'User'
    users: 'UserConnection'
  }
  RequestAcceptedAlert: { // field return type name
    createdAt: 'Date'
    createdBy: 'User'
    createdById: 'HashId'
    id: 'HashId'
    isCreator: 'Boolean'
    recipients: 'User'
    request: 'Request'
    requestId: 'HashId'
  }
  RequestDeclinedAlert: { // field return type name
    createdAt: 'Date'
    createdBy: 'User'
    createdById: 'HashId'
    id: 'HashId'
    isCreator: 'Boolean'
    recipients: 'User'
    request: 'Request'
    requestId: 'HashId'
  }
  RoleChangedEvent: { // field return type name
    chat: 'Chat'
    chatId: 'HashId'
    createdAt: 'Date'
    createdBy: 'User'
    createdById: 'HashId'
    id: 'HashId'
    isCreator: 'Boolean'
    members: 'Member'
    newRole: 'Role'
    updatedAt: 'Date'
  }
  Stranger: { // field return type name
    createdAt: 'Date'
    friendRequest: 'FriendRequest'
    id: 'HashId'
    mutualFriends: 'FriendConnection'
    name: 'String'
    updatedAt: 'Date'
    username: 'String'
  }
  Subscription: { // field return type name
    alerts: 'Alert'
    chatAccessAlerts: 'ChatAccessAlert'
    eventCreated: 'Event'
    eventDeleted: 'DeletedEvent'
    eventUpdated: 'Event'
    events: 'Event'
    notifications: 'Notification'
    requests: 'Request'
  }
  UserConnection: { // field return type name
    edges: 'UserEdge'
    pageInfo: 'PageInfo'
  }
  UserEdge: { // field return type name
    cursor: 'String'
    node: 'User'
  }
  Alert: { // field return type name
    createdAt: 'Date'
    createdBy: 'User'
    createdById: 'HashId'
    id: 'HashId'
    isCreator: 'Boolean'
    recipients: 'User'
  }
  Chat: { // field return type name
    createdAt: 'Date'
    createdBy: 'User'
    createdById: 'HashId'
    id: 'HashId'
    isCreator: 'Boolean'
    updatedAt: 'Date'
  }
  ChatAccessAlert: { // field return type name
    chat: 'Chat'
    chatId: 'HashId'
    createdAt: 'Date'
    createdBy: 'User'
    createdById: 'HashId'
    id: 'HashId'
    isCreator: 'Boolean'
    recipients: 'User'
  }
  ChatUpdateEvent: { // field return type name
    chat: 'Chat'
    chatId: 'HashId'
    createdAt: 'Date'
    createdBy: 'User'
    createdById: 'HashId'
    id: 'HashId'
    isCreator: 'Boolean'
    updatedAt: 'Date'
  }
  Event: { // field return type name
    chat: 'Chat'
    chatId: 'HashId'
    createdAt: 'Date'
    createdBy: 'User'
    createdById: 'HashId'
    id: 'HashId'
    isCreator: 'Boolean'
    updatedAt: 'Date'
  }
  KnownUser: { // field return type name
    chats: 'Chat'
    friends: 'FriendConnection'
  }
  Member: { // field return type name
    addedBy: 'User'
    addedById: 'HashId'
    chat: 'Chat'
    chatId: 'HashId'
    role: 'Role'
    user: 'User'
    userId: 'HashId'
  }
  MemberAlterationEvent: { // field return type name
    chat: 'Chat'
    chatId: 'HashId'
    createdAt: 'Date'
    createdBy: 'User'
    createdById: 'HashId'
    id: 'HashId'
    isCreator: 'Boolean'
    members: 'Member'
    updatedAt: 'Date'
  }
  Notification: { // field return type name
    createdAt: 'Date'
    createdBy: 'User'
    createdById: 'HashId'
    id: 'HashId'
    isCreator: 'Boolean'
  }
  Request: { // field return type name
    createdAt: 'Date'
    createdBy: 'User'
    createdById: 'HashId'
    id: 'HashId'
    isCreator: 'Boolean'
    recipient: 'User'
    recipientId: 'HashId'
    state: 'RequestState'
  }
  RequestResponseAlert: { // field return type name
    createdAt: 'Date'
    createdBy: 'User'
    createdById: 'HashId'
    id: 'HashId'
    isCreator: 'Boolean'
    recipients: 'User'
    request: 'Request'
    requestId: 'HashId'
  }
  User: { // field return type name
    createdAt: 'Date'
    id: 'HashId'
    name: 'String'
    updatedAt: 'Date'
    username: 'String'
  }
}

export interface NexusGenArgTypes {
  DirectMessageChat: {
    events: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
    }
  }
  Friend: {
    friends: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
    }
  }
  GroupChat: {
    events: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
    }
    members: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
    }
  }
  Me: {
    friends: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
    }
    requests: { // args
      state?: NexusGenEnums['RequestState'] | null; // RequestState
    }
    sentRequests: { // args
      state?: NexusGenEnums['RequestState'] | null; // RequestState
    }
  }
  Mutation: {
    acceptRequest: { // args
      requestId: NexusGenScalars['HashId']; // HashId!
    }
    acknowledgeAlert: { // args
      alertId: NexusGenScalars['HashId']; // HashId!
    }
    addMembers: { // args
      chatId: NexusGenScalars['HashId']; // HashId!
      members: NexusGenScalars['HashId'][]; // [HashId!]!
    }
    cancelRequest: { // args
      requestId: NexusGenScalars['HashId']; // HashId!
    }
    changeRole: { // args
      chatId: NexusGenScalars['HashId']; // HashId!
      members: NexusGenScalars['HashId'][]; // [HashId!]!
      role: NexusGenEnums['Role']; // Role!
    }
    createDirectMessageChat: { // args
      friendId: NexusGenScalars['HashId']; // HashId!
    }
    createGroupChat: { // args
      data: NexusGenInputs['CreateGroupChatInput']; // CreateGroupChatInput!
    }
    createMessage: { // args
      chatId: NexusGenScalars['HashId']; // HashId!
      content: string; // String!
    }
    declineRequest: { // args
      requestId: NexusGenScalars['HashId']; // HashId!
    }
    deleteChat: { // args
      chatId: NexusGenScalars['HashId']; // HashId!
    }
    deleteEvent: { // args
      eventId?: NexusGenScalars['HashId'] | null; // HashId
    }
    deleteFriend: { // args
      friendId: NexusGenScalars['HashId']; // HashId!
    }
    leaveGroupChat: { // args
      chatId: NexusGenScalars['HashId']; // HashId!
    }
    removeMembers: { // args
      chatId: NexusGenScalars['HashId']; // HashId!
      members: NexusGenScalars['HashId'][]; // [HashId!]!
    }
    sendFriendRequest: { // args
      strangerId: NexusGenScalars['HashId']; // HashId!
    }
    updateGroupChatDescription: { // args
      chatId: NexusGenScalars['HashId']; // HashId!
      description: string; // String!
    }
    updateGroupChatName: { // args
      chatId: NexusGenScalars['HashId']; // HashId!
      name: string; // String!
    }
    updateMessage: { // args
      content: string; // String!
      messageId: NexusGenScalars['HashId']; // HashId!
    }
    updateUser: { // args
      name: string; // String!
    }
  }
  Query: {
    chat: { // args
      chatId: NexusGenScalars['HashId']; // HashId!
    }
    event: { // args
      eventId: NexusGenScalars['HashId']; // HashId!
    }
    events: { // args
      after?: string | null; // String
      before?: string | null; // String
      chatId: NexusGenScalars['HashId']; // HashId!
      first?: number | null; // Int
      last?: number | null; // Int
    }
    members: { // args
      after?: string | null; // String
      before?: string | null; // String
      chatId: NexusGenScalars['HashId']; // HashId!
      first?: number | null; // Int
      last?: number | null; // Int
    }
    requests: { // args
      state?: NexusGenEnums['RequestState'] | null; // RequestState
    }
    user: { // args
      userId: NexusGenScalars['HashId']; // HashId!
    }
    users: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      orderBy?: NexusGenInputs['UserOrderBy'] | null; // UserOrderBy
      usernameFilter?: string | null; // String
    }
  }
  Stranger: {
    mutualFriends: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
    }
  }
  Subscription: {
    eventCreated: { // args
      chatId?: NexusGenScalars['HashId'] | null; // HashId
    }
    eventDeleted: { // args
      chatId?: NexusGenScalars['HashId'] | null; // HashId
    }
    eventUpdated: { // args
      chatId?: NexusGenScalars['HashId'] | null; // HashId
    }
    events: { // args
      chatId?: NexusGenScalars['HashId'] | null; // HashId
    }
  }
  KnownUser: {
    friends: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
    }
  }
}

export interface NexusGenAbstractTypeMembers {
  ChatSubscriptionResult: "DeletedChat" | "DirectMessageChat" | "GroupChat"
  Alert: "ChatAdminAccessGrantedAlert" | "ChatAdminAccessRevokedAlert" | "ChatDeletedAlert" | "ChatMemberAccessGrantedAlert" | "ChatMemberAccessRevokedAlert" | "FriendDeletedAlert" | "RequestAcceptedAlert" | "RequestDeclinedAlert"
  Chat: "DeletedChat" | "DirectMessageChat" | "GroupChat"
  ChatAccessAlert: "ChatAdminAccessGrantedAlert" | "ChatAdminAccessRevokedAlert" | "ChatMemberAccessGrantedAlert" | "ChatMemberAccessRevokedAlert"
  ChatUpdateEvent: "DescriptionUpdatedEvent" | "MembersAddedEvent" | "MembersRemovedEvent" | "NameUpdatedEvent" | "RoleChangedEvent"
  Event: "DeletedEvent" | "DescriptionUpdatedEvent" | "MembersAddedEvent" | "MembersRemovedEvent" | "MessageEvent" | "NameUpdatedEvent" | "RoleChangedEvent"
  KnownUser: "Friend" | "Me"
  Member: "ChatMember" | "DeletedMember"
  MemberAlterationEvent: "MembersAddedEvent" | "MembersRemovedEvent" | "RoleChangedEvent"
  Notification: "ChatAdminAccessGrantedAlert" | "ChatAdminAccessRevokedAlert" | "ChatDeletedAlert" | "ChatMemberAccessGrantedAlert" | "ChatMemberAccessRevokedAlert" | "FriendDeletedAlert" | "FriendRequest" | "RequestAcceptedAlert" | "RequestDeclinedAlert"
  Request: "FriendRequest"
  RequestResponseAlert: "RequestAcceptedAlert" | "RequestDeclinedAlert"
  User: "Friend" | "Me" | "Stranger"
}

export interface NexusGenTypeInterfaces {
  ChatAdminAccessGrantedAlert: "Alert" | "ChatAccessAlert" | "Notification"
  ChatAdminAccessRevokedAlert: "Alert" | "ChatAccessAlert" | "Notification"
  ChatDeletedAlert: "Alert" | "Notification"
  ChatMember: "Member"
  ChatMemberAccessGrantedAlert: "Alert" | "ChatAccessAlert" | "Notification"
  ChatMemberAccessRevokedAlert: "Alert" | "ChatAccessAlert" | "Notification"
  DeletedChat: "Chat"
  DeletedEvent: "Event"
  DeletedMember: "Member"
  DescriptionUpdatedEvent: "ChatUpdateEvent" | "Event"
  DirectMessageChat: "Chat"
  Friend: "KnownUser" | "User"
  FriendDeletedAlert: "Alert" | "Notification"
  FriendRequest: "Notification" | "Request"
  GroupChat: "Chat"
  Me: "KnownUser" | "User"
  MembersAddedEvent: "ChatUpdateEvent" | "Event" | "MemberAlterationEvent"
  MembersRemovedEvent: "ChatUpdateEvent" | "Event" | "MemberAlterationEvent"
  MessageEvent: "Event"
  NameUpdatedEvent: "ChatUpdateEvent" | "Event"
  RequestAcceptedAlert: "Alert" | "Notification" | "RequestResponseAlert"
  RequestDeclinedAlert: "Alert" | "Notification" | "RequestResponseAlert"
  RoleChangedEvent: "ChatUpdateEvent" | "Event" | "MemberAlterationEvent"
  Stranger: "User"
  Alert: "Notification"
  ChatAccessAlert: "Alert" | "Notification"
  ChatUpdateEvent: "Event"
  MemberAlterationEvent: "ChatUpdateEvent" | "Event"
  Request: "Notification"
  RequestResponseAlert: "Alert" | "Notification"
}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = keyof NexusGenInputs;

export type NexusGenEnumNames = keyof NexusGenEnums;

export type NexusGenInterfaceNames = keyof NexusGenInterfaces;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = keyof NexusGenUnions;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType = "Alert" | "Chat" | "ChatAccessAlert" | "ChatSubscriptionResult" | "ChatUpdateEvent" | "Event" | "KnownUser" | "Member" | "MemberAlterationEvent" | "Notification" | "Request" | "RequestResponseAlert" | "User";

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false
    resolveType: true
    __typename: false
  }
}

export interface NexusGenTypes {
  context: IContext;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginInputTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
    
    /**
     * Authorization for an individual field. Returning "true"
     * or "Promise<true>" means the field can be accessed.
     * Returning "false" or "Promise<false>" will respond
     * with a "Not Authorized" error for the field.
     * Returning or throwing an error will also prevent the
     * resolver from executing.
     */
    authorize?: FieldAuthorizeResolver<TypeName, FieldName>
  }
  interface NexusGenPluginInputFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
  interface NexusGenPluginArgConfig {
  }
}